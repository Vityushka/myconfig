substitutions:
  board_name: esp32_test

esphome:
  name: esp32_test
  platform: ESP32
  board: lolin32

wifi:
  ssid: !secret wifi_ssid_k
  password: !secret wifi_pass
  domain: .localdomain
  reboot_timeout: 15min
  output_power: 17.5dB
  fast_connect: true
  power_save_mode: none
  manual_ip:
    static_ip: 192.168.1.247
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8

logger:

api:
  reboot_timeout: 0s

ota:

web_server:
  port: 80
  

binary_sensor:
  - platform: status
    name: ${board_name}_Status

  - platform: gpio
    pin:
      number: GPIO13
      inverted: false
    name: ${board_name}_motion
    device_class: motion
    id: motion_test
    on_press:
      then:
        - if:
            condition:
              - sun.is_below_horizon:
            then:
              - logger.log: Motion!
              - light.turn_on: 
                  id: internal_led

output:
  - platform: ledc
    id: internal_led_pin
    pin: GPIO04
    
light:
  - platform: monochromatic
    name: ${board_name}_internal_led
    output: internal_led_pin
    id: internal_led
    effects:
      - strobe:

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
      uint32_t dur = id(uptime_sensor).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 15s

sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor
    update_interval: 15s
    
  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

switch:
  - platform: restart
    name: ${board_name}_Restart

sun:
  latitude: !secret my_lat
  longitude: !secret my_long

time:
  - platform: homeassistant
    id: homeassistant_time
  - platform: sntp
    id: sntp_time
    on_time:
      # Every 5 minutes
      - seconds: 5
        then:
          - if:
              condition:
                for:
                  time: 15s
                  condition:
                    binary_sensor.is_off: motion_test
              then:
                - logger.log: No Motion!
                - light.turn_off: internal_led