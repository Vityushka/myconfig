substitutions:
  board_name: esp32_kitchen

esphome:
  name: esp32_kitchen
  platform: ESP32
  board: lolin32

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  domain: .localdomain
  reboot_timeout: 0s
  manual_ip:
    static_ip: 192.168.1.107
    gateway: 192.168.1.1
    subnet: 255.255.255.0

logger:

api:
  reboot_timeout: 0s
  services:
    - service: control_servo
      variables:
        level: float
      then:
        - servo.write:
            id: air_valve_servo
            level: !lambda 'return level / 100.0;'

ota:

web_server:
  port: 80
  
uart:
  rx_pin: GPIO23
  tx_pin: GPIO4
  baud_rate: 9600

i2c:
  sda: GPIO21
  scl: GPIO22
  scan: True
  
servo:
  - id: air_valve_servo
    output: pwm_output

output:
  - platform: ledc
    id: pwm_output
    pin: GPIO27 # Servo Pin
    frequency: 50 Hz

remote_transmitter:
  pin: GPIO26
  carrier_duty_percent: 50%

#remote_receiver:
#  pin: GPIO12
#  dump: all

binary_sensor:
  - platform: status
    name: ${board_name}_Status

  - platform: gpio
    pin:
      number: GPIO33
      mode: INPUT_PULLDOWN
      inverted: true
    name: ${board_name}_Magnet
    device_class: opening

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
      uint32_t dur = id(uptime_sensor).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 15s

sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor
    update_interval: 15s
    
  - platform: bme280
    temperature:
      name: ${board_name}_Temperature
      oversampling: 16x
      id: bme280_temperature
    pressure:
      name: ${board_name}_Pressure
      id: bme280_pressure
    humidity:
      name: ${board_name}_Humidity
      id: bme280_humidity
    address: 0x76
    update_interval: 60s

  - platform: mhz19
    co2:
      name: "Z19 CO2 K"
    temperature:
      name: "Z19 Temp K"
    update_interval: 60s
  
  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

switch:
  - platform: restart
    name: ${board_name}_Restart

  - platform: template
    name: ${board_name}_TV_PWR
    turn_on_action:
      - remote_transmitter.transmit_samsung:
          data: 0xE0E040BF

  - platform: template
    name: ${board_name}_TVBox_PWR
    turn_on_action:
      - remote_transmitter.transmit_nec:
          address: 0x807F
          command: 0x02FD

  - platform: gpio
    name: ${board_name}_Fan1
    id: relay1
    icon: mdi:fan
    interlock: [relay1, relay2, relay3]
    pin:
      number: GPIO16
      inverted: true

  - platform: gpio
    name: ${board_name}_Fan2
    id: relay2
    icon: mdi:fan
    interlock: [relay1, relay2, relay3]
    pin: 
      number: GPIO17
      inverted: true

  - platform: gpio
    name: ${board_name}_Fan3
    id: relay3
    icon: mdi:fan
    interlock: [relay1, relay2, relay3]
    pin:
      number: GPIO18
      inverted: true
      
  - platform: gpio
    name: ${board_name}_Light
    icon: mdi:track-light
    id: relay4
    pin:
      number: GPIO19
      inverted: true

time:
  - platform: homeassistant
    id: homeassistant_time