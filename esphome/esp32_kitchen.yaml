substitutions:
  board_name: esp32_kitchen

esphome:
  name: esp32_kitchen
  platform: ESP32
  board: lolin32
  on_boot:
    then:
      if:
        condition:
          lambda: 'return id(magnet).state == 1;'
        then:
          - switch.turn_on: valve_open

wifi:
  ssid: !secret wifi_ssid_k
  password: !secret wifi_pass
  domain: .localdomain
  reboot_timeout: 0s
  output_power: 17.5dB
  fast_connect: true
  power_save_mode: none
  manual_ip:
    static_ip: 192.168.1.107
    gateway: 192.168.1.1
    subnet: 255.255.255.0

logger:

api:
  reboot_timeout: 0s

ota:

web_server:
  port: 80
  
uart:
  rx_pin: GPIO23
  tx_pin: GPIO4
  baud_rate: 9600

i2c:
  sda: GPIO21
  scl: GPIO22
  scan: True

  # - id: bus_a
  #   sda: 13
  #   scl: 16
  #   scan: True
  # - id: bus_b
  #   sda: 14
  #   scl: 15
  #   scan: True

# as3935_i2c:
#   irq_pin: GPIO32
  #spike_rejection: 2
  #indoor: false
  
servo:
  - id: air_valve_servo
    output: pwm_output

output:
  - platform: ledc
    id: pwm_output
    pin: GPIO27 # Servo Pin
    frequency: 50 Hz

remote_transmitter:
  pin: GPIO26
  carrier_duty_percent: 50%

# remote_receiver:
#   pin: GPIO12
#   dump: all

binary_sensor:
  - platform: status
    name: ${board_name}_Status

  - platform: gpio
    pin:
      number: GPIO33
      mode: INPUT_PULLDOWN
      inverted: true
    name: ${board_name}_Magnet
    device_class: opening
    id: magnet

  - platform: gpio
    pin:
      number: GPIO35
      # mode: INPUT_PULLDOWN
      # inverted: true
    name: ${board_name}_Sound
    device_class: sound
    filters:
      - delayed_off: 3s

  # - platform: as3935
  #   name: ${board_name}_Storm_Alert

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
      uint32_t dur = id(uptime_sensor).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 15s

sensor:
  # - platform: as3935
  #   lightning_energy:
  #     name: ${board_name}_Lightning_Energy
  #   distance:
  #     name: ${board_name}_Distance_Storm

  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor
    update_interval: 15s
    
  - platform: bme280
    temperature:
      name: ${board_name}_Temperature
      oversampling: 16x
      id: bme280_temperature
    pressure:
      name: ${board_name}_Pressure
      id: bme280_pressure
    humidity:
      name: ${board_name}_Humidity
      id: bme280_humidity
    address: 0x76
    update_interval: 60s

  - platform: mhz19
    co2:
      name: "Z19 CO2 K"
    temperature:
      name: "Z19 Temp K"
    update_interval: 60s
  
  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

switch:
  - platform: restart
    name: ${board_name}_Restart

  - platform: template
    name: ${board_name}_OpenValve
    icon: mdi:valve-open
    id: valve_open
    turn_on_action:
      - servo.write:
          id: air_valve_servo
          level: 75%

  - platform: template
    name: ${board_name}_CloseValve
    icon: mdi:valve-closed
    turn_on_action:
      - servo.write:
          id: air_valve_servo
          level: 0%

  - platform: template
    name: ${board_name}_AirValve_Control
    icon: mdi:valve
    lambda: |-
      if (id(magnet).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - servo.write:
          id: air_valve_servo
          level: 75%
    turn_off_action:
      - servo.write:
          id: air_valve_servo
          level: 0%


  - platform: template
    name: ${board_name}_TV_PWR
    turn_on_action:
      - remote_transmitter.transmit_samsung:
          data: 0xE0E040BF

  - platform: template
    name: ${board_name}_TVBox_PWR
    turn_on_action:
      - remote_transmitter.transmit_nec:
          address: 0x807F
          command: 0x02FD

  # - platform: gpio
  #   name: ${board_name}_Fan1
  #   id: relay1
  #   icon: mdi:fan
  #   interlock: [relay1, relay2, relay3]
  #   pin:
  #     number: GPIO16
  #     inverted: true

  # - platform: gpio
  #   name: ${board_name}_Fan2
  #   id: relay2
  #   icon: mdi:fan
  #   interlock: [relay1, relay2, relay3]
  #   pin: 
  #     number: GPIO17
  #     inverted: true

  # - platform: gpio
  #   name: ${board_name}_Fan3
  #   id: relay3
  #   icon: mdi:fan
  #   interlock: [relay1, relay2, relay3]
  #   pin:
  #     number: GPIO18
  #     inverted: true
      
  # - platform: gpio
  #   name: ${board_name}_Light
  #   icon: mdi:track-light
  #   id: relay4
  #   pin:
  #     number: GPIO19
  #     inverted: true

time:
  - platform: homeassistant
    id: homeassistant_time