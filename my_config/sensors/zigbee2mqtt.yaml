  # Sensor for monitoring the bridge state
  - platform: mqtt
    name: Zigbee2mqtt Bridge state
    state_topic: "zigbee2mqtt/bridge/state"
    icon: mdi:router-wireless
  # Sensor for Showing the Zigbee2mqtt Version
  - platform: mqtt
    name: Zigbee2mqtt Version
    state_topic: "zigbee2mqtt/bridge/config"
    value_template: "{{ value_json.version }}"
    icon: mdi:zigbee
  # Sensor for Showing the Coordinator Version
  - platform: mqtt
    name: Coordinator Version
    state_topic: "zigbee2mqtt/bridge/config"
    value_template: "{{ value_json.coordinator }}"
    icon: mdi:chip
  # Sensor for Showing Last Log Message
  - platform: mqtt
    name: Zigbee2mqtt Last Message
    state_topic: "zigbee2mqtt/bridge/log"
    value_template: "{{ value_json.type }}"
    icon: mdi:message-alert

  # Sensor for monitoring the addon restart tpoic
  - platform: mqtt
    name: Zigbee2mqtt Addon restart
    state_topic: "zigbee2mqtt_addon_restart"
    icon: mdi:restart


  # Sensor for monitoring the bridge state pairing
  - platform: mqtt
    name: Zigbee2mqtt Permit Join
    state_topic: "zigbee2mqtt/bridge/config/permit_join"
    force_update: true
    icon: mdi:shape-plus


  - platform: rest
    resource: http://192.168.1.30:8123/api/hassio/addons/7ad98f9c_zigbee2mqtt/info
    name: zigbee2mqtt_addon
    value_template: '{{ value_json.data.state }}'
    scan_interval: 60
    headers:
      Authorization: !secret mqtt_long_token
      Content-Type: application/json
    json_attributes_path: "$.data"
    json_attributes:
      - version
      - version_latest
      
  - platform: mqtt
    name: SLS Gateway Uptime
    icon: mdi:timeline-clock
    unit_of_measurement: ""
    availability_topic: "SLS_Gateway/bridge/state"
    state_topic: "SLS_Gateway/bridge/config"
    #value_template: "{{ value_json.UptimeStr }}"
    value_template: >
      {%- set test = value_json.Uptime |int -%}
      {%- set minutes = ((test % 3600) / 60) | int %}
      {%- set hours = ((test % 86400) / 3600) | int %}
      {%- set days = (test / 86400) | int -%}
      
      {%if days > 0 %}{{days}}d {% endif %}{%if hours > 0 %}{{hours}}h {% endif %}{%if minutes > 0%}{{ minutes}}m{%else%}<1m{%endif%}

  - platform: template
    sensors:
        zigbee_health:
         friendly_name: Zigbee health
         entity_id: sensor.time
         icon_template: >-
          {% if states('sensor.zigbee_health') | int == 0 %}
            mdi:wifi
          {% else %}
            mdi:wifi-off
          {% endif %}
         value_template: >-
            {%- macro GetDroppedZigbee() -%}
            {% for state in states.sensor -%}
            {%- if state.attributes.linkquality %}
            {%- if "linkquality" in state.name and  (as_timestamp(now()) - as_timestamp(state.last_updated) > (4*60*60) ) -%}
             X 
            {%- endif -%}
            {%- endif -%}
            {%- endfor %}
            {%- endmacro -%}
            {%- if GetDroppedZigbee()[0] == "X" -%}
            {{GetDroppedZigbee()|list|length }}
            {%- else -%}
            0
            {%- endif -%} 
         attribute_templates:
          off_device: >-
              {% for state in states.sensor-%}
              {%- if state.attributes.linkquality %}
              {%- if "linkquality" in state.name and  (as_timestamp(now()) - as_timestamp(state.last_updated) > (4*60*60) ) %}
              [[ {{ relative_time(state.last_updated)}} for {{state.name | lower | replace("_linkquality", "") }} ]]  
              {%- endif -%}
              {%- endif -%}
              {%- endfor %}