# ############################################################################
# Hardware sensors Z9PA - NVME
# ############################################################################
  - platform: template
    sensors:
      f20_single_session_write:
        value_template: "{{ (states('sensor.md5_session_write')|float * 0.25) | round(1) }}"
        unit_of_measurement: 'Gb'
      f20_single_session_read:
        value_template: "{{ (states('sensor.md5_session_read')|float * 0.25) | round(1) }}"
        unit_of_measurement: 'Gb'
      f20_tb_written:
        value_template: '1000'
        unit_of_measurement: 'Gb'

  - platform: statistics
    entity_id: sensor.f20_single_session_write
    name: f20_statistics
    max_age:
      minutes: 60

  - platform: statistics
    entity_id: sensor.nvme0_session_write
    name: nvme0_statistics
    max_age:
      minutes: 60

  - platform: statistics
    entity_id: sensor.nvme1_session_write
    name: nvme1_statistics
    max_age:
      minutes: 60
      
  - platform: statistics
    entity_id: sensor.nvme2_session_write
    name: nvme2_statistics
    max_age:
      minutes: 60

  - platform: statistics
    entity_id: sensor.sdb_session_write
    name: sdb_statistics
    max_age:
      minutes: 60

  - platform: statistics
    entity_id: sensor.sdb_session_write
    name: sda_statistics
    max_age:
      minutes: 60


  - platform: template
    sensors:
      nvme0_write_change_1h:
        value_template: "{{ state_attr('sensor.nvme0_statistics','change') }}"
        unit_of_measurement: 'Gb'
      nvme1_write_change_1h:
        value_template: "{{ state_attr('sensor.nvme1_statistics','change') }}"
        unit_of_measurement: 'Gb'
      nvme2_write_change_1h:
        value_template: "{{ state_attr('sensor.nvme2_statistics','change') }}"
        unit_of_measurement: 'Gb'
      sda_write_change_1h:
        value_template: "{{ state_attr('sensor.sda_statistics','change') }}"
        unit_of_measurement: 'Gb'
      sdb_write_change_1h:
        value_template: "{{ state_attr('sensor.sdb_statistics','change') }}"
        unit_of_measurement: 'Gb'
      f20_write_change_1h:
        value_template: "{{ state_attr('sensor.f20_statistics','change') }}"
        unit_of_measurement: 'Gb'

  - platform: template
    sensors:
      j3455_sda_gb_per_hour:
        friendly_name: j3455 sda Gb per hour
        unit_of_measurement: Gb
        entity_id: sensor.j3455_ssd_session_write
        icon_template: mdi:clock
        value_template: >-
          {% set uptime = states('sensor.j3455_uptime') %}
          {% if uptime | float  > 0 %}
          {{ (states('sensor.j3455_ssd_session_write')|float / states('sensor.j3455_uptime')|float)|round(2) }}
          {% else %}
          {{states('sensor.j3455_ssd_session_write')|float | round(2)}}
          {% endif %}
      j3455_sda_gb_per_day:
        friendly_name: j3455 sda Gb per day
        unit_of_measurement: Gb
        icon_template: mdi:calendar
        entity_id: sensor.j3455_ssd_session_write
        value_template: >-
          {% set uptime = states('sensor.j3455_uptime') %}
          {% if uptime | float  > 0 %}
          {{ (((states('sensor.j3455_ssd_session_write')|float) / (states('sensor.j3455_uptime')|float)*24)|float)|round(2) }}
          {% else %}
          {{ (states('sensor.j3455_ssd_session_write')|float*24) | round(2)}}
          {% endif %}
      j3455_sda_life_left:
        friendly_name: j3455 sda Calculated life left
        unit_of_measurement: years
        entity_id: sensor.j3455_ssd_session_write
        icon_template: mdi:calendar-clock
        value_template: >-
          {%set tbw = 40 %}
          {%set per_day = states('sensor.j3455_sda_gb_per_day')|float%}
          {%set total = states('sensor.j3455_ssd_total_lba_written')|float%}
          {%if per_day == 0 %}
          {{ ((tbw-total)*1024/1/365)|round(2)  }}
          {%else%}
          {{ ((tbw-total)*1024/per_day/365)|round(2)  }}
          {%endif%}

      rpi_sda_gb_per_hour:
        friendly_name: RPI sda Gb per hour
        unit_of_measurement: Gb
        entity_id: sensor.rpi_ssd_session_write
        icon_template: mdi:clock
        value_template: >-
          {% set uptime = states('sensor.rpi_uptime') %}
          {% if uptime | float  > 0 %}
          {{ (states('sensor.rpi_ssd_session_write')|float / states('sensor.rpi_uptime')|float)|round(2) }}
          {% else %}
          {{states('sensor.rpi_ssd_session_write')|float | round(2)}}
          {% endif %}
      rpi_sda_gb_per_day:
        friendly_name: RPI sda Gb per day
        unit_of_measurement: Gb
        icon_template: mdi:calendar
        entity_id: sensor.rpi_ssd_session_write
        value_template: >-
          {% set uptime = states('sensor.rpi_uptime') %}
          {% if uptime | float  > 0 %}
          {{ (((states('sensor.rpi_ssd_session_write')|float) / (states('sensor.rpi_uptime')|float)*24)|float)|round(2) }}
          {% else %}
          {{ (states('sensor.rpi_ssd_session_write')|float*24) | round(2)}}
          {% endif %}
      rpi_sda_life_left:
        friendly_name: RPI sda Calculated life left
        unit_of_measurement: years
        entity_id: sensor.rpi_ssd_session_write
        icon_template: mdi:calendar-clock
        value_template: >-
          {%set tbw = 40 %}
          {%set per_day = states('sensor.rpi_sda_gb_per_day')|float%}
          {%set total = states('sensor.rpi_ssd_total_lba_written')|float%}
          {%if per_day == 0 %}
          {{ ((tbw-total)*1024/1/365)|round(2)  }}
          {%else%}
          {{ ((tbw-total)*1024/per_day/365)|round(2)  }}
          {%endif%}



      sdp_gb_per_hour:
        friendly_name: sdp Gb per hour
        unit_of_measurement: Gb
        entity_id: sensor.sdp_session_write
        icon_template: mdi:clock
        value_template: >-
          {% set uptime = states('sensor.host_uptime') %}
          {% if uptime | float  > 0 %}
          {{ (states('sensor.sdp_session_write')|float / states('sensor.host_uptime')|float)|round(2) }}
          {% else %}
          {{states('sensor.sdp_session_write')|float | round(2)}}
          {% endif %}
      sdp_gb_per_day:
        friendly_name: sdp Gb per day
        unit_of_measurement: Gb
        icon_template: mdi:calendar
        entity_id: sensor.sdp_session_write
        value_template: >-
          {% set uptime = states('sensor.host_uptime') %}
          {% if uptime | float  > 0 %}
          {{ (((states('sensor.sdp_session_write')|float) / (states('sensor.host_uptime')|float)*24)|float)|round(2) }}
          {% else %}
          {{ (states('sensor.sdp_session_write')|float*24) | round(2)}}
          {% endif %}

      sdq_gb_per_hour:
        friendly_name: sdq Gb per hour
        unit_of_measurement: Gb
        entity_id: sensor.sdq_session_write
        icon_template: mdi:clock
        value_template: >-
          {% set uptime = states('sensor.host_uptime') %}
          {% if uptime | float  > 0 %}
          {{ (states('sensor.sdq_session_write')|float / states('sensor.host_uptime')|float)|round(2) }}
          {% else %}
          {{states('sensor.sdq_session_write')|float | round(2)}}
          {% endif %}
      sdq_gb_per_day:
        friendly_name: sdq Gb per day
        unit_of_measurement: Gb
        icon_template: mdi:calendar
        entity_id: sensor.sdp_session_write
        value_template: >-
          {% set uptime = states('sensor.host_uptime') %}
          {% if uptime | float  > 0 %}
          {{ (((states('sensor.sdq_session_write')|float) / (states('sensor.host_uptime')|float)*24)|float)|round(2) }}
          {% else %}
          {{ (states('sensor.sdq_session_write')|float*24) | round(2)}}
          {% endif %}

      sdr_gb_per_hour:
        friendly_name: sdr Gb per hour
        unit_of_measurement: Gb
        entity_id: sensor.sdr_session_write
        icon_template: mdi:clock
        value_template: >-
          {% set uptime = states('sensor.host_uptime') %}
          {% if uptime | float  > 0 %}
          {{ (states('sensor.sdr_session_write')|float / states('sensor.host_uptime')|float)|round(2) }}
          {% else %}
          {{states('sensor.sdr_session_write')|float | round(2)}}
          {% endif %}
      sdr_gb_per_day:
        friendly_name: sdr Gb per day
        unit_of_measurement: Gb
        icon_template: mdi:calendar
        entity_id: sensor.sdr_session_write
        value_template: >-
          {% set uptime = states('sensor.host_uptime') %}
          {% if uptime | float  > 0 %}
          {{ (((states('sensor.sdr_session_write')|float) / (states('sensor.host_uptime')|float)*24)|float)|round(2) }}
          {% else %}
          {{ (states('sensor.sdr_session_write')|float*24) | round(2)}}
          {% endif %}

      sds_gb_per_hour:
        friendly_name: sds Gb per hour
        unit_of_measurement: Gb
        entity_id: sensor.sds_session_write
        icon_template: mdi:clock
        value_template: >-
          {% set uptime = states('sensor.host_uptime') %}
          {% if uptime | float  > 0 %}
          {{ (states('sensor.sds_session_write')|float / states('sensor.host_uptime')|float)|round(2) }}
          {% else %}
          {{states('sensor.sds_session_write')|float | round(2)}}
          {% endif %}
      sds_gb_per_day:
        friendly_name: sds Gb per day
        unit_of_measurement: Gb
        icon_template: mdi:calendar
        entity_id: sensor.sds_session_write
        value_template: >-
          {% set uptime = states('sensor.host_uptime') %}
          {% if uptime | float  > 0 %}
          {{ (((states('sensor.sds_session_write')|float) / (states('sensor.host_uptime')|float)*24)|float)|round(2) }}
          {% else %}
          {{ (states('sensor.sds_session_write')|float*24) | round(2)}}
          {% endif %}

      f20_gb_per_hour:
        friendly_name: f20 Gb per hour
        unit_of_measurement: Gb
        entity_id: sensor.md5_session_write
        icon_template: mdi:clock
        value_template: >-
          {% set uptime = states('sensor.host_uptime') %}
          {% if uptime | float  > 0 %}
          {{ (states('sensor.f20_single_session_write')|float / states('sensor.host_uptime')|float)|round(2) }}
          {% else %}
          {{states('sensor.f20_single_session_write')|float | round(2)}}
          {% endif %}
      f20_gb_per_day:
        friendly_name: f20 Gb per day
        unit_of_measurement: Gb
        icon_template: mdi:calendar
        entity_id: sensor.md5_session_write
        value_template: >-
          {% set uptime = states('sensor.host_uptime') %}
          {% if uptime | float  > 0 %}
          {{ (((states('sensor.f20_single_session_write')|float) / (states('sensor.host_uptime')|float)*24)|float)|round(2) }}
          {% else %}
          {{ (states('sensor.f20_single_session_write')|float*24) | round(2)}}
          {% endif %}
      f20_life_left:
        friendly_name: f20 Calculated life left
        unit_of_measurement: years
        entity_id: sensor.md5_session_write
        icon_template: mdi:calendar-clock
        value_template: >-
          {%set tbw = 1000 %}
          {%set per_day = states('sensor.f20_gb_per_day')|float%}
          {%set total = 5000%}
          {%if per_day == 0 %}
          {{ ((tbw-total)*1024/1/365)|round(2)  }}
          {%else%}
          {{ ((tbw-total)*1024/per_day/365)|round(2)  }}
          {%endif%}
    
      sda_gb_per_hour:
        friendly_name: sda Gb per hour
        unit_of_measurement: Gb
        entity_id: sensor.sda_session_write
        icon_template: mdi:clock
        value_template: >-
          {% set uptime = states('sensor.host_uptime') %}
          {% if uptime | float  > 0 %}
          {{ (states('sensor.sda_session_write')|float / states('sensor.host_uptime')|float)|round(2) }}
          {% else %}
          {{states('sensor.sda_session_write')|float | round(2)}}
          {% endif %}
      sda_gb_per_day:
        friendly_name: sda Gb per day
        unit_of_measurement: Gb
        icon_template: mdi:calendar
        entity_id: sensor.sda_session_write
        value_template: >-
          {% set uptime = states('sensor.host_uptime') %}
          {% if uptime | float  > 0 %}
          {{ (((states('sensor.sda_session_write')|float) / (states('sensor.host_uptime')|float)*24)|float)|round(2) }}
          {% else %}
          {{ (states('sensor.sda_session_write')|float*24) | round(2)}}
          {% endif %}
      sda_life_left:
        friendly_name: sda Calculated life left
        unit_of_measurement: years
        entity_id: sensor.sda_session_write
        icon_template: mdi:calendar-clock
        value_template: >-
          {%set tbw = 40 %}
          {%set per_day = states('sensor.sda_gb_per_day')|float%}
          {%set total = states('sensor.sda_tb_written')|float%}
          {%if per_day == 0 %}
          {{ ((tbw-total)*1024/1/365)|round(2)  }}
          {%else%}
          {{ ((tbw-total)*1024/per_day/365)|round(2)  }}
          {%endif%}

      sdb_gb_per_hour:
        friendly_name: sdb Gb per hour
        unit_of_measurement: Gb
        entity_id: sensor.sdb_session_write
        icon_template: mdi:clock
        value_template: >-
          {% set uptime = states('sensor.host_uptime') %}
          {% if uptime | float  > 0 %}
          {{ (states('sensor.sdb_session_write')|float / states('sensor.host_uptime')|float)|round(2) }}
          {% else %}
          {{states('sensor.sdb_session_write')|float | round(2)}}
          {% endif %}
      sdb_gb_per_day:
        friendly_name: sdb Gb per day
        unit_of_measurement: Gb
        icon_template: mdi:calendar
        entity_id: sensor.sdb_session_write
        value_template: >-
          {{ (states('sensor.sdb_gb_per_hour')|float *24) | round(2) }}
      sdb_life_left:
        friendly_name: sdb Calculated life left
        unit_of_measurement: years
        entity_id: sensor.sdb_session_write
        icon_template: mdi:calendar-clock
        value_template: >-
          {%set tbw = 150 %}
          {%set per_day = states('sensor.sdb_gb_per_day')|float%}
          {%set total = states('sensor.sdb_tb_written')|float%}
          {%if per_day == 0 %}
          {{ ((tbw-total)*1024/1/365)|round(2)  }}
          {%else%}
          {{ ((tbw-total)*1024/per_day/365)|round(2)  }}
          {%endif%}

      nvme0_gb_per_hour:
        friendly_name: NVME0 Gb per hour
        unit_of_measurement: Gb
        entity_id: sensor.nvme0_session_write
        icon_template: mdi:clock
        value_template: >-
          {% set uptime = states('sensor.host_uptime')|float %}
          {% if uptime > 0 %}
          {{ (states('sensor.nvme0_session_write')|float / states('sensor.host_uptime')|float)|round(2) }}
          {% else %}
          {{states('sensor.nvme0_session_write')|float | round(2)}}
          {% endif %}
      nvme0_gb_per_day:
        friendly_name: NVME0 Gb per day
        unit_of_measurement: Gb
        icon_template: mdi:calendar
        entity_id: sensor.nvme0_session_write
        value_template: >-
          {{ (states('sensor.nvme0_gb_per_hour')|float *24) | round(2) }}
      nvme0_life_left:
        friendly_name: NVME0 Calculated life left
        unit_of_measurement: years
        entity_id: sensor.nvme0_session_write
        icon_template: mdi:calendar-clock
        value_template: >-
          {%set tbw = 160 %}
          {%set per_day = states('sensor.nvme0_gb_per_day')|float%}
          {%set total = states('sensor.nvme0_tb_written')|float%}
          {%if per_day == 0 %}
          {{ ((tbw-total)*1024/1/365)|round(2)  }}
          {%else%}
          {{ ((tbw-total)*1024/per_day/365)|round(2)  }}
          {%endif%}

      nvme1_gb_per_hour:
        friendly_name: NVME1 Gb per hour
        unit_of_measurement: Gb
        entity_id: sensor.nvme1_session_write
        icon_template: mdi:clock
        value_template: >-
          {% set uptime = states('sensor.host_uptime')|float %}
          {% if uptime > 0 %}
          {{ (states('sensor.nvme1_session_write')|float / states('sensor.host_uptime')|float)|round(2) }}
          {% else %}
          {{states('sensor.nvme1_session_write')|float | round(2)}}
          {% endif %}
      nvme1_gb_per_day:
        friendly_name: NVME1 Gb per day
        unit_of_measurement: Gb
        icon_template: mdi:calendar
        entity_id: sensor.nvme1_session_write
        value_template: >-
          {{ (states('sensor.nvme1_gb_per_hour')|float *24) | round(2) }}
      nvme1_life_left:
        friendly_name: NVME1 Calculated life left
        unit_of_measurement: years
        entity_id: sensor.nvme1_session_write
        icon_template: mdi:calendar-clock
        value_template: >-
          {%set tbw = 160 %}
          {%set per_day = states('sensor.nvme1_gb_per_day')|float%}
          {%set total = states('sensor.nvme1_tb_written')|float%}
          {%if per_day == 0 %}
          {{ ((tbw-total)*1024/1/365)|round(2)  }}
          {%else%}
          {{ ((tbw-total)*1024/per_day/365)|round(2)  }}
          {%endif%}

      nvme2_gb_per_hour:
        friendly_name: NVME2 Gb per hour
        unit_of_measurement: Gb
        entity_id: sensor.nvme2_session_write
        icon_template: mdi:clock
        value_template: >-
          {% set uptime = states('sensor.host_uptime')|float %}
          {% if uptime > 0 %}
          {{ (states('sensor.nvme2_session_write')|float / states('sensor.host_uptime')|float)|round(2) }}
          {% else %}
          {{states('sensor.nvme2_session_write')|float | round(2)}}
          {% endif %}
      nvme2_gb_per_day:
        friendly_name: NVME2 Gb per day
        unit_of_measurement: Gb
        icon_template: mdi:calendar
        entity_id: sensor.nvme2_session_write
        value_template: >-
          {{ (states('sensor.nvme2_gb_per_hour')|float *24) | round(2) }}
      nvme2_life_left:
        friendly_name: NVME2 Calculated life left
        unit_of_measurement: years
        entity_id: sensor.nvme2_session_write
        icon_template: mdi:calendar-clock
        value_template: >-
          {%set tbw = 160 %}
          {%set per_day = states('sensor.nvme2_gb_per_day')|float%}
          {%set total = states('sensor.nvme2_tb_written')|float%}
          {%if per_day == 0 %}
          {{ ((tbw-total)*1024/1/365)|round(2)  }}
          {%else%}
          {{ ((tbw-total)*1024/per_day/365)|round(2)  }}
          {%endif%}
          

# ############################################################################
# Hardware sensors Z9PA - Internal HA
# ############################################################################
  - platform: cpuspeed

  - platform: systemmonitor
    resources:
      - type: last_boot
      - type: memory_use_percent
      - type: processor_use
      - type: load_1m
      - type: load_5m
      - type: load_15m
      - type: disk_use_percent
        arg: /
  - platform: command_line
    name: CPU Temperature
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) | round(0) }}'


  #- platform: command_line
  #  name: GPU Temperature
  #  command: "/opt/vc/bin/vcgencmd measure_temp"
  #  unit_of_measurement: "°C"
  #  value_template: '{{ value | replace("temp=", "") | replace("''C", "") | round(0) }}'

# ############################################################################
# Hardware sensors (RPI) - MQTT
# ############################################################################
  - platform: mqtt
    name: RPI Telemetry Last Update
    state_topic: "rpi/last_update"
    value_template: '{{ value }}'
    icon: mdi:calendar
  
  - platform: mqtt
    name: "RPI Uptime"
    state_topic: "rpi/system_uptime"
    value_template: '{{ ((value | float)/3600) | round(2) }}'
    unit_of_measurement: 'h'
    icon: mdi:timer
    
  - platform: mqtt
    name: "RPI CPU Usage"
    state_topic: "rpi/cpu_percent"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '%'
    icon: mdi:speedometer
    
  - platform: mqtt
    name: "RPI CPU Temp"
    state_topic: "rpi/sensors_temperatures/cpu-thermal"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer
    
  - platform: mqtt
    name: "RPI RAM Usage"
    state_topic: "rpi/virtual_memory/percent"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '%'
    icon: mdi:memory

  - platform: mqtt
    name: "RPI SSD Usage"
    state_topic: "rpi/disk_usage/percent/|"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '%'
    icon: mdi:chip

  - platform: mqtt
    name: "RPI SSD Total LBA Written"
    state_topic: "rpi/sda_lba_total"
    value_template: '{{ ( value | float * 512 / 1024 / 1024 / 1024 / 1024) |round(1) }}'
    unit_of_measurement: 'Tb'
    icon: mdi:chip

  - platform: mqtt
    name: "RPI SSD Session Read"
    state_topic: "rpi/disk_stat/sda_gb_read"
    value_template: '{{ ( value | float ) |round(1) }}'
    unit_of_measurement: 'Gb'
    icon: mdi:alpha-r-box

  - platform: mqtt
    name: "RPI SSD Session Write"
    state_topic: "rpi/disk_stat/sda_gb_write"
    value_template: '{{ ( value | float ) |round(1) }}'
    unit_of_measurement: 'Gb'
    icon: mdi:alpha-w-box

# ############################################################################
# Hardware sensors (j3455) - MQTT
# ############################################################################
  - platform: mqtt
    name: j3455 Telemetry Last Update
    state_topic: "j3455/last_update"
    value_template: '{{ value }}'
    icon: mdi:calendar


  - platform: mqtt
    name: "j3455 Uptime"
    state_topic: "j3455/system_uptime"
    value_template: '{{ ((value | float)/3600) | round(2) }}'
    unit_of_measurement: 'h'
    icon: mdi:timer

  - platform: mqtt
    name: "j3455 CPU Usage"
    state_topic: "j3455/cpu_percent"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '%'
    icon: mdi:speedometer
    
  - platform: mqtt
    name: "j3455 CPU Temp"
    state_topic: "j3455/sensors_temperatures/coretemp/0"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer
    
  - platform: mqtt
    name: "j3455 RAM Usage"
    state_topic: "j3455/virtual_memory/percent"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '%'
    icon: mdi:memory

  - platform: mqtt
    name: "j3455 SSD Usage"
    state_topic: "j3455/disk_usage/percent/|"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '%'
    icon: mdi:chip

  - platform: mqtt
    name: "j3455 SSD Total LBA Written"
    state_topic: "j3455/sda_lba_total"
    value_template: '{{ ( value | float * 512 / 1024 / 1024 / 1024 / 1024) |round(1) }}'
    unit_of_measurement: 'Tb'
    icon: mdi:chip

  - platform: mqtt
    name: "j3455 SSD Session Read"
    state_topic: "j3455/disk_stat/sda_gb_read"
    value_template: '{{ ( value | float ) |round(1) }}'
    unit_of_measurement: 'Gb'
    icon: mdi:alpha-r-box

  - platform: mqtt
    name: "j3455 SSD Session Write"
    state_topic: "j3455/disk_stat/sda_gb_write"
    value_template: '{{ ( value | float ) |round(1) }}'
    unit_of_measurement: 'Gb'
    icon: mdi:alpha-w-box

  - platform: mqtt
    name: "j3455 SSD Temp"
    state_topic: "j3455/disk_temp/sda"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer


# ############################################################################
# Hardware sensors (IPMI) - MQTT
# ###########################################################################
  - platform: mqtt
    name: Ubuntu Telemetry Last Update
    state_topic: "ubuntu/last_update"
    value_template: '{{ value }}'
    icon: mdi:calendar

  - platform: mqtt
    name: Ubuntu Uptime
    state_topic: "ubuntu/system_uptime"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: '{{ ((value | float)/3600) | round(2) }}'
    unit_of_measurement: 'h'
    icon: mdi:clock-digital


  - platform: mqtt
    name: "IPMI CPU1 Temp"
    state_topic: "ubuntu/ipmi/cpu1_temp"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: "IPMI CPU2 Temp"
    state_topic: "ubuntu/ipmi/cpu2_temp"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: "IPMI TR1 Temp"
    state_topic: "ubuntu/ipmi/tr1_temp"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: "IPMI TR2 Temp"
    state_topic: "ubuntu/ipmi/tr2_temp"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: "IPMI CPU Fan1"
    state_topic: "ubuntu/ipmi/cpu_fan1"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: 'RPM'
    icon: mdi:fan

  - platform: mqtt
    name: "IPMI CPU Fan2"
    state_topic: "ubuntu/ipmi/cpu_fan2"
    value_template: '{{ value | int | round(0)}}'
    unit_of_measurement: 'RPM'
    icon: mdi:fan

  - platform: mqtt
    name: "IPMI Rear Fan 1"
    state_topic: "ubuntu/ipmi/rear_fan1"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: 'RPM'
    icon: mdi:fan

  - platform: mqtt
    name: "IPMI Rear Fan 2"
    state_topic: "ubuntu/ipmi/rear_fan2"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: 'RPM'
    icon: mdi:fan

  - platform: mqtt
    name: "IPMI Front Fan 1"
    state_topic: "ubuntu/ipmi/frnt_fan1"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: 'RPM'
    icon: mdi:fan

  - platform: mqtt
    name: "IPMI Front Fan 2"
    state_topic: "ubuntu/ipmi/frnt_fan2"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: 'RPM'
    icon: mdi:fan

  - platform: mqtt
    name: "IPMI Front Fan 3"
    state_topic: "ubuntu/ipmi/frnt_fan3"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: 'RPM'
    icon: mdi:fan

  - platform: mqtt
    name: "IPMI Front Fan 4"
    state_topic: "ubuntu/ipmi/frnt_fan4"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: 'RPM'
    icon: mdi:fan


# ############################################################################
# Hardware sensors (Ubuntu) - MQTT - System Stats
# ############################################################################

  - platform: mqtt
    name: "CPU Usage"
    state_topic: "ubuntu/cpu_percent"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '%'
    icon: mdi:speedometer
    
  - platform: mqtt
    name: "CPU1 Package Temp"
    state_topic: "ubuntu/sensors_temperatures/coretemp/0"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer
    
  - platform: mqtt
    name: "CPU2 Package Temp"
    state_topic: "ubuntu/sensors_temperatures/coretemp/7"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer

# ############################################################################
# Hardware sensors (Ubuntu) - MQTT - RAM Usage
# ############################################################################
  - platform: mqtt
    name: "RAM Usage"
    state_topic: "ubuntu/virtual_memory/percent"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '%'
    icon: mdi:memory

# ############################################################################
# Hardware sensors (Ubuntu) - MQTT - Drives Usage
# ############################################################################
  - platform: mqtt
    name: "SSD Usage"
    state_topic: "ubuntu/disk_usage/md0"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '%'
    icon: mdi:chip
    
  - platform: mqtt
    name: "840pro Usage"
    state_topic: "ubuntu/disk_usage/840pro"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '%'
    icon: mdi:chip

  - platform: mqtt
    name: "NVME2 Usage"
    state_topic: "ubuntu/disk_usage/nvme2"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '%'
    icon: mdi:chip

  - platform: mqtt
    name: "Video Usage"
    state_topic: "ubuntu/disk_usage/video"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '%'
    icon: mdi:harddisk

  - platform: mqtt
    name: "Media Usage"
    state_topic: "ubuntu/disk_usage/md2"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '%'
    icon: mdi:harddisk

  - platform: mqtt
    name: "Back_2Tb Usage"
    state_topic: "ubuntu/disk_usage/md1"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '%'
    icon: mdi:harddisk

  - platform: mqtt
    name: "320l Usage"
    state_topic: "ubuntu/disk_usage/320l"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '%'
    icon: mdi:nas
    
  - platform: mqtt
    name: "md5 Usage"
    state_topic: "ubuntu/disk_usage/md5"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '%'
    icon: mdi:chip

# ############################################################################
# Hardware sensors (Ubuntu) - MQTT - Drives Temperature
# ############################################################################
  - platform: mqtt
    name: "NVME0 Temp"
    state_topic: "ubuntu/disk_temp/nvme0"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer
    
  - platform: mqtt
    name: "NVME1 Temp"
    state_topic: "ubuntu/disk_temp/nvme1"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: "NVME2 Temp"
    state_topic: "ubuntu/disk_temp/nvme2"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: "sda Temp"
    state_topic: "ubuntu/disk_temp/sda"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: "sdb Temp"
    state_topic: "ubuntu/disk_temp/sdb"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: "sdc Temp"
    state_topic: "ubuntu/disk_temp/sdc"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: "sdd Temp"
    state_topic: "ubuntu/disk_temp/sdd"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: "sde Temp"
    state_topic: "ubuntu/disk_temp/sde"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: "sdf Temp"
    state_topic: "ubuntu/disk_temp/sdf"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: "sdg Temp"
    state_topic: "ubuntu/disk_temp/sdg"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: "sdh Temp"
    state_topic: "ubuntu/disk_temp/sdh"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: "sdi Temp"
    state_topic: "ubuntu/disk_temp/sdi"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: "sdj Temp"
    state_topic: "ubuntu/disk_temp/sdj"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: "sdk Temp"
    state_topic: "ubuntu/disk_temp/sdk"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer
    
  - platform: mqtt
    name: "sdl Temp"
    state_topic: "ubuntu/disk_temp/sdl"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: "sdm Temp"
    state_topic: "ubuntu/disk_temp/sdm"
    value_template: '{{ value | int | round(0) }}'
    unit_of_measurement: '°C'
    icon: mdi:thermometer
    
# ############################################################################
# Hardware sensors (Ubuntu) - MQTT - SSD Drives Smart Data
# ############################################################################
  - platform: mqtt
    name: "NVME0 Tb Written"
    state_topic: "ubuntu/nvme0_lba_written"
    value_template: '{{ ( value | float * 512000 / 1024 / 1024 / 1024 / 1024) |round(1) }}'
    unit_of_measurement: 'Tb'
    icon: mdi:chip

  - platform: mqtt
    name: "NVME1 Tb Written"
    state_topic: "ubuntu/nvme1_lba_written"
    value_template: '{{ ( value | float * 512000 / 1024 / 1024 / 1024 / 1024) |round(1) }}'
    unit_of_measurement: 'Tb'
    icon: mdi:chip

  - platform: mqtt
    name: "NVME2 Tb Written"
    state_topic: "ubuntu/nvme2_lba_written"
    value_template: '{{ ( value | float * 512000 / 1024 / 1024 / 1024 / 1024) |round(1) }}'
    unit_of_measurement: 'Tb'
    icon: mdi:chip

  - platform: mqtt
    name: "sda Tb Written"
    state_topic: "ubuntu/sda_gb_total"
    value_template: '{{ (value| float / 1024) |round(2) }}'
    unit_of_measurement: 'Tb'
    icon: mdi:chip
    
  - platform: mqtt
    name: "sdb Tb Written"
    state_topic: "ubuntu/sdb_lba_written"
    value_template: '{{ ( value | float * 512 / 1024 / 1024 / 1024 / 1024) |round(1) }}'
    unit_of_measurement: 'Tb'
    icon: mdi:chip

# ############################################################################
# Hardware sensors (Ubuntu) - MQTT - Drives Read\Write Stats
# ############################################################################
  - platform: mqtt
    name: NVME0 Session Write
    state_topic: "ubuntu/disk_stat/nvme0_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box

  - platform: mqtt
    name: NVME0 Session Read
    state_topic: "ubuntu/disk_stat/nvme0_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box

  - platform: mqtt
    name: NVME1 Session Write
    state_topic: "ubuntu/disk_stat/nvme1_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box

  - platform: mqtt
    name: NVME1 Session Read
    state_topic: "ubuntu/disk_stat/nvme1_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box

  - platform: mqtt
    name: NVME2 Session Write
    state_topic: "ubuntu/disk_stat/nvme2_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box

  - platform: mqtt
    name: NVME2 Session Read
    state_topic: "ubuntu/disk_stat/nvme2_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box

  - platform: mqtt
    name: sda Session Write
    state_topic: "ubuntu/disk_stat/sda_gb_write"
    value_template: '{{ value| float | round(1) }}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box
    
  - platform: mqtt
    name: sda Session Read
    state_topic: "ubuntu/disk_stat/sda_gb_read"
    value_template: '{{ value| float | round(1) }}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box
    
  - platform: mqtt
    name: sdb Session Write
    state_topic: "ubuntu/disk_stat/sdb_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box
    
  - platform: mqtt
    name: sdb Session Read
    state_topic: "ubuntu/disk_stat/sdb_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box


# ############################################################################
# Hardware sensors (Ubuntu) - MQTT - Session States (Drives R\W)
# ############################################################################  
  - platform: mqtt
    name: sdc Session Write
    state_topic: "ubuntu/disk_stat/sdc_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box
    
  - platform: mqtt
    name: sdc Session Read
    state_topic: "ubuntu/disk_stat/sdc_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box

  - platform: mqtt
    name: sdd Session Write
    state_topic: "ubuntu/disk_stat/sdd_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box
    
  - platform: mqtt
    name: sdd Session Read
    state_topic: "ubuntu/disk_stat/sdd_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box


  - platform: mqtt
    name: sde Session Write
    state_topic: "ubuntu/disk_stat/sde_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box
    
  - platform: mqtt
    name: sde Session Read
    state_topic: "ubuntu/disk_stat/sde_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box

  - platform: mqtt
    name: sdf Session Write
    state_topic: "ubuntu/disk_stat/sdf_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box
    
  - platform: mqtt
    name: sdf Session Read
    state_topic: "ubuntu/disk_stat/sdf_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box

  - platform: mqtt
    name: sdg Session Write
    state_topic: "ubuntu/disk_stat/sdg_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box
    
  - platform: mqtt
    name: sdg Session Read
    state_topic: "ubuntu/disk_stat/sdg_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box

  - platform: mqtt
    name: sdh Session Write
    state_topic: "ubuntu/disk_stat/sdh_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box
    
  - platform: mqtt
    name: sdh Session Read
    state_topic: "ubuntu/disk_stat/sdh_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box
    
  - platform: mqtt
    name: sdi Session Write
    state_topic: "ubuntu/disk_stat/sdi_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box
    
  - platform: mqtt
    name: sdi Session Read
    state_topic: "ubuntu/disk_stat/sdi_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box
    
  - platform: mqtt
    name: sdj Session Write
    state_topic: "ubuntu/disk_stat/sdj_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box
    
  - platform: mqtt
    name: sdj Session Read
    state_topic: "ubuntu/disk_stat/sdj_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box
    
  - platform: mqtt
    name: sdk Session Write
    state_topic: "ubuntu/disk_stat/sdk_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box
    
  - platform: mqtt
    name: sdk Session Read
    state_topic: "ubuntu/disk_stat/sdk_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box  
  
  - platform: mqtt
    name: sdl Session Write
    state_topic: "ubuntu/disk_stat/sdl_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box
    
  - platform: mqtt
    name: sdl Session Read
    state_topic: "ubuntu/disk_stat/sdl_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box


  - platform: mqtt
    name: sdp Session Write
    state_topic: "ubuntu/disk_stat/sdp_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box
    
  - platform: mqtt
    name: sdp Session Read
    state_topic: "ubuntu/disk_stat/sdp_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box

  - platform: mqtt
    name: sdq Session Write
    state_topic: "ubuntu/disk_stat/sdq_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box
    
  - platform: mqtt
    name: sdq Session Read
    state_topic: "ubuntu/disk_stat/sdq_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box

  - platform: mqtt
    name: sdr Session Write
    state_topic: "ubuntu/disk_stat/sdr_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box
    
  - platform: mqtt
    name: sdr Session Read
    state_topic: "ubuntu/disk_stat/sdr_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box
    
  - platform: mqtt
    name: sds Session Write
    state_topic: "ubuntu/disk_stat/sds_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box
    
  - platform: mqtt
    name: sds Session Read
    state_topic: "ubuntu/disk_stat/sds_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box


# ############################################################################
# Hardware sensors (Ubuntu) - MQTT - RAID Stats
# ############################################################################
  - platform: mqtt
    name: md0 Session Write
    state_topic: "ubuntu/disk_stat/md0_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box
    
  - platform: mqtt
    name: md0 Session Read
    state_topic: "ubuntu/disk_stat/md0_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box

  - platform: mqtt
    name: md1 Session Write
    state_topic: "ubuntu/disk_stat/md1_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box

  - platform: mqtt
    name: md1 Session Read
    state_topic: "ubuntu/disk_stat/md1_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box

  - platform: mqtt
    name: md2 Session Write
    state_topic: "ubuntu/disk_stat/md2_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box

  - platform: mqtt
    name: md2 Session Read
    state_topic: "ubuntu/disk_stat/md2_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box

  - platform: mqtt
    name: Video Session Write
    state_topic: "ubuntu/disk_stat/video_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box

  - platform: mqtt
    name: Video Session Read
    state_topic: "ubuntu/disk_stat/video_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box

  - platform: mqtt
    name: md3 Session Write
    state_topic: "ubuntu/disk_stat/md3_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box

  - platform: mqtt
    name: md3 Session Read
    state_topic: "ubuntu/disk_stat/md3_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box

  - platform: mqtt
    name: md4 Session Write
    state_topic: "ubuntu/disk_stat/md4_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box

  - platform: mqtt
    name: md4 Session Read
    state_topic: "ubuntu/disk_stat/md4_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box

  - platform: mqtt
    name: md5 Session Write
    state_topic: "ubuntu/disk_stat/md5_gb_write"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-w-box

  - platform: mqtt
    name: md5 Session Read
    state_topic: "ubuntu/disk_stat/md5_gb_read"
    value_template: '{{ value| float| round(1)}}'
    unit_of_measurement: Gb
    icon: mdi:alpha-r-box

# ############################################################################
# Hardware sensors (Ubuntu) - MQTT - MDADM Arrays State
# ############################################################################
  - platform: mqtt
    name: md0 Status
    state_topic: "ubuntu/mdstat/md0"
    value_template: '{{ value }}'
    icon: mdi:harddisk

  - platform: mqtt
    name: md0_disk1
    state_topic: "ubuntu/mdstat/md0_disk1"
    value_template: '{{ value }}'
    icon: mdi:chip

  - platform: mqtt
    name: md0_disk2
    state_topic: "ubuntu/mdstat/md0_disk2"
    value_template: '{{ value }}'
    icon: mdi:chip


  - platform: template
    sensors:
      md0_disk1_template:
        friendly_name: md0 Disk1 dev
        value_template: "{{ states('sensor.md0_disk1') }}"
        icon_template: >
          {%if 'nvme0' in states.sensor.md0_disk1.state %}
              mdi:numeric-0-box
          {%elif 'nvme1' in states.sensor.md0_disk1.state %}
              mdi:numeric-1-box
          {%elif 'nvme2' in states.sensor.md0_disk1.state %}
              mdi:numeric-2-box
          {%else%}
              mdi:chip
          {%endif%}

      md0_disk2_template:
        friendly_name: md0 Disk2 dev
        value_template: "{{ states('sensor.md0_disk2') }}"
        icon_template: >
          {%if 'nvme0' in states.sensor.md0_disk2.state %}
              mdi:numeric-0-box
          {%elif 'nvme1' in states.sensor.md0_disk2.state %}
              mdi:numeric-1-box
          {%elif 'nvme2' in states.sensor.md0_disk2.state %}
              mdi:numeric-2-box
          {%else%}
              mdi:chip
          {%endif%}

  - platform: mqtt
    name: md0_full
    state_topic: "ubuntu/mdstat/md0_full"
    value_template: '{{ value }}'
    icon: mdi:chip

    
  - platform: mqtt
    name: md1 Status
    state_topic: "ubuntu/mdstat/md1"
    value_template: '{{ value }}'
    icon: mdi:harddisk

  - platform: mqtt
    name: md1_full
    state_topic: "ubuntu/mdstat/md1_full"
    value_template: '{{ value }}'
    icon: mdi:harddisk

  - platform: mqtt
    name: md2 Status
    state_topic: "ubuntu/mdstat/md2"
    value_template: '{{ value }}'
    icon: mdi:harddisk

  - platform: mqtt
    name: md2_full
    state_topic: "ubuntu/mdstat/md2_full"
    value_template: '{{ value }}'
    icon: mdi:harddisk
    
  - platform: mqtt
    name: md3 Status
    state_topic: "ubuntu/mdstat/md3"
    value_template: '{{ value }}'
    icon: mdi:harddisk

  - platform: mqtt
    name: md4 Status
    state_topic: "ubuntu/mdstat/md4"
    value_template: '{{ value }}'
    icon: mdi:harddisk

  - platform: mqtt
    name: md5 Status
    state_topic: "ubuntu/mdstat/md5"
    value_template: '{{ value }}'
    icon: mdi:harddisk

# ############################################################################
# Hardware sensors - Windows PC
# ############################################################################
##############################################################################################
# BRIX Telemetry
##############################################################################################
  - platform: mqtt
    name: BRIX Telemetry Last Update
    state_topic: "brix/last_update"
    value_template: '{{ value }}'
    icon: mdi:calendar

  - platform: mqtt
    name: BRIX Uptime
    state_topic: "brix/system_uptime"
    qos: 0
    expire_after: 150
    force_update: true
    #value_template: "{{ value }}"
    value_template: "{{ ( value | float ) |round(2) }}"
    unit_of_measurement: 'h'
    icon: mdi:clock-digital

  - platform: mqtt
    name: BRIX SSD Temperature
    state_topic: "brix/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[3].Children[0].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: BRIX SSD Usage
    state_topic: "brix/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[3].Children[1].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:chip

  - platform: mqtt
    name: BRIX 860evo Total Gb Written
    state_topic: "brix/smart/860evo_250gb_lba_written"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ ( value | float * 512 / 1024 / 1024 / 1024 ) |round(1) }}"
    unit_of_measurement: 'Gb'
    icon: mdi:chip

  - platform: mqtt
    name: BRIX 860evo Power On Hours
    state_topic: "brix/smart/860evo_250gb_power_on_hours"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ ( value | int) }}"
    unit_of_measurement: 'h'
    icon: mdi:timer

  - platform: template
    sensors:
      brix_860evo_gb_per_hour:
        friendly_name: BRIX 860evo gb per hour
        value_template: >
          {%if states('sensor.u430p_840pro_power_on_hours')|float(-9999) == -9999%}
          0
          {%else%}
          {{(states('sensor.u430p_840pro_total_gb_written')|float / states('sensor.u430p_840pro_power_on_hours')|float)|round(2)}}
          {%endif%}
        icon_template: mdi:chip
        unit_of_measurement: 'Gb\h'
      brix_860evo_calc_life_left:
        friendly_name: BRIX 860evo Calculated Life Left
        unit_of_measurement: years
        entity_id: sensor.brix_cpu_load
        icon_template: mdi:calendar-clock
        value_template: >-
          {%set tbw = 150*1024%}
          {%set per_day = states('sensor.brix_860evo_gb_per_hour')|float*24%}
          {%set total = states('sensor.brix_860evo_total_gb_written')|float%}
          {%if per_day == 0 %}
          {{ ((tbw-total)/1/365)|round(2)  }}
          {%else%}
          {{ ((tbw-total)/per_day/365)|round(2)  }}
          {%endif%}


  - platform: mqtt
    name: BRIX CPU Temperature
    state_topic: "brix/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[0].Children[0].Children[1].Children[1].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: BRIX CPU Fan
    state_topic: "brix/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[0].Children[0].Children[2].Children[0].Value.split(' ')[0] | int }}"
    unit_of_measurement: 'rpm'
    icon: mdi:fan
  
  - platform: mqtt
    name: BRIX AUX Temperature
    state_topic: "brix/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[0].Children[0].Children[1].Children[2].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: BRIX Memory Usage
    state_topic: "brix/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[2].Children[0].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:memory
    
  - platform: mqtt
    name: BRIX CPU Load
    state_topic: "brix/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[1].Children[0].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:speedometer
    
##############################################################################################
# u430p Telemetry
##############################################################################################
  - platform: mqtt
    name: u430p Telemetry Last Update
    state_topic: "u430p/last_update"
    value_template: '{{ value }}'
    icon: mdi:calendar

  - platform: mqtt
    name: u430p Last Boot
    state_topic: "u430p/last_boot"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value }}"
    #value_template: "{{ ( value | float ) |round(2) }}"
    #unit_of_measurement: 'h'
    icon: mdi:calendar

  - platform: template
    sensors:
      u430p_uptime:
        friendly_name: u430p Uptime
        value_template: >
          {%if states('sensor.u430p_cpu_load')|int(-9999) == -9999%}
          0
          {%else%}
          {{((as_timestamp(now())-as_timestamp(strptime(states('sensor.u430p_last_boot'),'%d.%m.%Y %H:%M:%S')))/3600) | round(2)}}
          {%endif%}
        icon_template: mdi:clock-digital 
        unit_of_measurement: 'h'

  - platform: mqtt
    name: u430p SSD Temperature
    state_topic: "u430p/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[4].Children[0].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: u430p SSD Usage
    state_topic: "u430p/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[4].Children[1].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:chip

  - platform: mqtt
    name: u430p 840pro Total Gb Written
    state_topic: "u430p/smart/840pro_512gb_lba_written"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ ( value | float * 512 / 1024 / 1024 / 1024 ) |round(1) }}"
    unit_of_measurement: 'Gb'
    icon: mdi:chip

  - platform: mqtt
    name: u430p 840pro Power On Hours
    state_topic: "u430p/smart/840pro_512gb_power_on_hours"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ ( value | int) }}"
    unit_of_measurement: 'h'
    icon: mdi:timer

  - platform: template
    sensors:
      u430p_840pro_gb_per_hour:
        friendly_name: u430p 840pro gb per hour
        value_template: >
          {%if states('sensor.u430p_840pro_power_on_hours')|float(-9999) == -9999%}
          0
          {%else%}
          {{(states('sensor.u430p_840pro_total_gb_written')|float / states('sensor.u430p_840pro_power_on_hours')|float)|round(2)}}
          {%endif%}
        icon_template: mdi:chip
        unit_of_measurement: 'Gb\h'
      u430p_840pro_calc_life_left:
        friendly_name: u430p 840pro Calculated Life Left
        unit_of_measurement: years
        entity_id: sensor.u430p_cpu_load
        icon_template: mdi:calendar-clock
        value_template: >-
          {%set tbw = 500*1024%}
          {%set per_day = states('sensor.u430p_840pro_gb_per_hour')|float*24%}
          {%set total = states('sensor.u430p_840pro_total_gb_written')|float%}
          {%if per_day == 0 %}
          {{ ((tbw-total)/1/365)|round(2)  }}
          {%else%}
          {{ ((tbw-total)/per_day/365)|round(2)  }}
          {%endif%}

  - platform: mqtt
    name: u430p M2 Usage
    state_topic: "u430p/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[5].Children[0].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:chip
    
  - platform: mqtt
    name: u430p CPU Temperature
    state_topic: "u430p/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[1].Children[1].Children[2].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: u430p SC2 M2 Total Gb Written
    state_topic: "u430p/smart/sc2_m2_120gb_mb_written"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ ( value | float / 1024 ) |round(1) }}"
    unit_of_measurement: 'Gb'
    icon: mdi:chip

  - platform: mqtt
    name: u430p SC2 M2 Power On Hours
    state_topic: "u430p/smart/sc2_m2_120gb_power_on_hours"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ ( value | int) }}"
    unit_of_measurement: 'h'
    icon: mdi:timer

  - platform: template
    sensors:
      u430p_sc2_m2_gb_per_hour:
        friendly_name: u430p SC2 M2  gb per hour
        value_template: >
          {%if states('sensor.u430p_840pro_power_on_hours')|float(-9999) == -9999%}
          0
          {%else%}
          {{(states('sensor.u430p_840pro_total_gb_written')|float / states('sensor.u430p_840pro_power_on_hours')|float)|round(2)}}
          {%endif%}
        icon_template: mdi:chip
        unit_of_measurement: 'Gb\h'
      u430p_sc2_m2_calc_life_left:
        friendly_name: u430p SC2 M2 Calculated Life Left
        unit_of_measurement: years
        entity_id: sensor.u430p_cpu_load
        icon_template: mdi:calendar-clock
        value_template: >-
          {%set tbw =  40*1024%}
          {%set per_day = states('sensor.u430p_sc2_m2_gb_per_hour')|float*24%}
          {%set total = states('sensor.u430p_sc2_m2_total_gb_written')|float%}
          {%if per_day == 0 %}
          {{ ((tbw-total)/1/365)|round(2)  }}
          {%else%}
          {{ ((tbw-total)/per_day/365)|round(2)  }}
          {%endif%}

  - platform: mqtt
    name: u430p Memory Usage
    state_topic: "u430p/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[2].Children[0].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:memory
    
  - platform: mqtt
    name: u430p CPU Load
    state_topic: "u430p/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[1].Children[2].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:speedometer

##############################################################################################
# R418 Telemetry
##############################################################################################
  - platform: mqtt
    name: r418 Telemetry Last Update
    state_topic: "r418/last_update"
    value_template: '{{ value }}'
    icon: mdi:calendar

  - platform: mqtt
    name: r418 Last Boot
    state_topic: "r418/last_boot"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value }}"
    icon: mdi:calendar
  
  - platform: template
    sensors:
      r418_uptime:
        friendly_name: r418 Uptime
        value_template: >
          {%if states('sensor.r418_cpu_load')|int(-9999) == -9999%}
          unknown
          {%else%}
          {{((as_timestamp(now())-as_timestamp(strptime(states('sensor.r418_last_boot'),'%d.%m.%Y %H:%M:%S')))/3600) | round(2)}}
          {%endif%}
        
        
        icon_template: mdi:clock-digital 
        unit_of_measurement: 'h'
    
        
  - platform: mqtt
    name: r418 SSD Usage
    state_topic: "r418/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[4].Children[0].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:chip  

  - platform: mqtt
    name: r418 SATA SSD Total Gb Written
    state_topic: "r418/smart/sata_ssd_128gb_lba_written"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ ( value | float * 512 / 1024 / 1024 / 1024 ) |round(1) }}"
    unit_of_measurement: 'Gb'
    icon: mdi:chip

  - platform: mqtt
    name: r418 SATA SSD Power On Hours
    state_topic: "r418/smart/sata_ssd_128gb_power_on_hours"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ ( value | int) }}"
    unit_of_measurement: 'h'
    icon: mdi:timer

  - platform: template
    sensors:
      r418_sata_ssd_gb_per_hour:
        friendly_name: r418 SATA SSD gb per hour
        value_template: >
          {%if states('sensor.r418_sata_ssd_power_on_hours')|float(-9999) == -9999%}
          0
          {%else%}
          {{(states('sensor.r418_sata_ssd_total_gb_written')|float / states('sensor.r418_sata_ssd_power_on_hours')|float)|round(2)}}
          {%endif%}
        icon_template: mdi:chip
        unit_of_measurement: 'Gb\h'
      r418_sata_ssd_calc_life_left:
        friendly_name: r418 SATA SSD Calculated Life Left
        unit_of_measurement: years
        entity_id: sensor.i5_cpu_load
        icon_template: mdi:calendar-clock
        value_template: >-
          {%set tbw =  40*1024%}
          {%set per_day = states('sensor.r418_sata_ssd_gb_per_hour')|float*24%}
          {%set total = states('sensor.r418_sata_ssd_total_gb_written')|float%}
          {%if states('sensor.r418_sata_ssd_power_on_hours')|float(-9999) == -9999%}
          unknown
          {%else%}
            {%if per_day == 0 %}
            {{ ((tbw-total)/1/365)|round(2)  }}
            {%else%}
            {{ ((tbw-total)/per_day/365)|round(2)  }}
            {%endif%}
          {%endif%}
  - platform: mqtt
    name: r418 CPU Temperature
    state_topic: "r418/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: >
      {% set cores_temp = value_json.Children[0].Children[1].Children[1].Children[0].Value.split(' ')[0].replace(',','.') | int,
                          value_json.Children[0].Children[1].Children[1].Children[1].Value.split(' ')[0].replace(',','.') | int %}
      {{ cores_temp|max }}
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: r418 Memory Usage
    state_topic: "r418/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[2].Children[0].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:memory
    
  - platform: mqtt
    name: r418 CPU Load
    state_topic: "r418/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[1].Children[2].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:speedometer

##############################################################################################
# i5 Vova Telemetry
##############################################################################################
  - platform: mqtt
    name: i5 Telemetry Last Update
    state_topic: "i5vova/last_update"
    value_template: '{{ value }}'
    icon: mdi:calendar

  - platform: mqtt
    name: i5 Uptime
    state_topic: "i5vova/system_uptime"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ ( value | float ) |round(2) }}"
    unit_of_measurement: 'h'
    icon: mdi:clock-digital

  - platform: mqtt
    name: i5 SSD Temperature
    state_topic: "i5vova/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[3].Children[0].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: i5 SSD Usage
    state_topic: "i5vova/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[3].Children[1].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:chip    

  - platform: mqtt
    name: i5 bx500 Total Gb Written
    state_topic: "i5vova/smart/bx500_120gb_lba_written"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ ( value | float * 512 / 1024 / 1024 / 1024 ) |round(1) }}"
    unit_of_measurement: 'Gb'
    icon: mdi:chip

  - platform: mqtt
    name: i5 bx500 Power On Hours
    state_topic: "i5vova/smart/bx500_120gb_power_on_hours"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ ( value | int) }}"
    unit_of_measurement: 'h'
    icon: mdi:timer

  - platform: template
    sensors:
      i5_bx500_gb_per_hour:
        friendly_name: i5 bx500 gb per hour
        value_template: >
          {%if states('sensor.i5_bx500_power_on_hours')|float(-9999) == -9999%}
          0
          {%else%}
          {{(states('sensor.i5_bx500_total_gb_written')|float / states('sensor.i5_bx500_power_on_hours')|float)|round(2)}}
          {%endif%}
        icon_template: mdi:chip
        unit_of_measurement: 'Gb\h'
      i5_bx500_calc_life_left:
        friendly_name: i5 bx500 Calculated Life Left
        unit_of_measurement: years
        entity_id: sensor.i5_cpu_load
        icon_template: mdi:calendar-clock
        value_template: >-
          {%set tbw =  40*1024%}
          {%set per_day = states('sensor.i5_bx500_gb_per_hour')|float*24%}
          {%set total = states('sensor.i5_bx500_total_gb_written')|float%}
          {%if states('sensor.i5_bx500_power_on_hours')|float(-9999) == -9999%}
          unknown
          {%else%}
            {%if per_day == 0 %}
            {{ ((tbw-total)/1/365)|round(2)  }}
            {%else%}
            {{ ((tbw-total)/per_day/365)|round(2)  }}
            {%endif%}
          {%endif%}

  - platform: mqtt
    name: i5 CPU Temperature
    state_topic: "i5vova/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[1].Children[1].Children[4].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: i5 Memory Usage
    state_topic: "i5vova/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[2].Children[0].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:memory
    
  - platform: mqtt
    name: i5 CPU Load
    state_topic: "i5vova/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[1].Children[2].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:speedometer

  - platform: mqtt
    name: i5 CPU Fan
    state_topic: "i5vova/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[0].Children[0].Children[2].Children[0].Value.split(' ')[0] | int }}"
    unit_of_measurement: 'rpm'
    icon: mdi:fan

  - platform: mqtt
    name: i5 Case Fan
    state_topic: "i5vova/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[0].Children[0].Children[2].Children[1].Value.split(' ')[0] | int }}"
    unit_of_measurement: 'rpm'
    icon: mdi:fan
    
##############################################################################################
# Dell 5490 Telemetry
##############################################################################################
  - platform: mqtt
    name: 5490 Telemetry Last Update
    state_topic: "5490/last_update"
    value_template: '{{ value }}'
    icon: mdi:calendar

  - platform: mqtt
    name: 5490 Uptime
    state_topic: "5490/system_uptime"
    qos: 0
    expire_after: 350
    force_update: true
    value_template: "{{ ( value | float ) |round(2) }}"
    unit_of_measurement: 'h'
    icon: mdi:clock-digital

  - platform: mqtt
    name: 5490 SC401 Temperature
    state_topic: "5490/telemetry"
    qos: 0
    expire_after: 350
    force_update: true
    value_template: "{{ value_json.Children[0].Children[3].Children[0].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: 5490 SC401 Total Gb Written
    state_topic: "5490/smart/sc401_256gb_total_lba_written"
    qos: 0
    expire_after: 350
    force_update: true
    value_template: "{{ ( value | float * 512 / 1024 / 1024 / 1024 ) |round(1) }}"
    unit_of_measurement: 'Gb'
    icon: mdi:chip

  - platform: template
    sensors:
      5490_sc401_gb_per_hour:
        friendly_name: 5490 SC401 Gb per hour
        value_template: >
          {%if states('sensor.5490_sc401_power_on_hours')|float(-9999) == -9999%}
          0
          {%else%}
          {{(states('sensor.5490_sc401_total_gb_written')|float / states('sensor.5490_sc401_power_on_hours')|float)|round(2)}}
          {%endif%}
        icon_template: mdi:chip
        unit_of_measurement: 'Gb\h'
      
      5490_sc401_calc_life_left:
        friendly_name: 5490 SC401 Calculated Life Left
        unit_of_measurement: years
        entity_id: sensor.5490_cpu_load
        icon_template: mdi:calendar-clock
        value_template: >-
          {%set tbw =  120*1024%}
          {%set per_day = states('sensor.5490_sc401_gb_per_hour')|float*24%}
          {%set total = states('sensor.5490_sc401_total_gb_written')|float%}
          {%if states('sensor.5490_sc401_power_on_hours')|float(-9999) == -9999%}
          unknown
          {%else%}
            {%if per_day == 0 %}
            {{ ((tbw-total)/1/365)|round(2)  }}
            {%else%}
            {{ ((tbw-total)/per_day/365)|round(2)  }}
            {%endif%}
          {%endif%}
        

  - platform: mqtt
    name: 5490 SC401 Power On Hours
    state_topic: "5490/smart/sc401_256gb_power_on_hours"
    qos: 0
    expire_after: 350
    force_update: true
    value_template: "{{ ( value | int) }}"
    unit_of_measurement: 'h'
    icon: mdi:timer

  - platform: mqtt
    name: 5490 SC401 Usage
    state_topic: "5490/telemetry"
    qos: 0
    expire_after: 350
    force_update: true
    value_template: "{{ value_json.Children[0].Children[3].Children[1].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:chip
    
  - platform: mqtt
    name: 5490 CPU Temperature
    state_topic: "5490/telemetry"
    qos: 0
    expire_after: 350
    force_update: true
    value_template: "{{ value_json.Children[0].Children[1].Children[1].Children[4].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: 5490 Memory Usage
    state_topic: "5490/telemetry"
    qos: 0
    expire_after: 350
    force_update: true
    value_template: "{{ value_json.Children[0].Children[2].Children[0].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:memory
    
  - platform: mqtt
    name: 5490 CPU Load
    state_topic: "5490/telemetry"
    qos: 0
    expire_after: 350
    force_update: true
    value_template: "{{ value_json.Children[0].Children[1].Children[2].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:speedometer

##############################################################################################
# Dell m6800 Telemetry
##############################################################################################
  - platform: mqtt
    name: m6800 Telemetry Last Update
    state_topic: "m6800/last_update"
    value_template: '{{ value }}'
    icon: mdi:calendar

  - platform: mqtt
    name: m6800 Uptime
    state_topic: "m6800/system_uptime"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ ( value | float ) |round(2) }}"
    unit_of_measurement: 'h'
    icon: mdi:clock-digital

  - platform: mqtt
    name: m6800 Drive E Temperature
    state_topic: "m6800/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[6].Children[0].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '°C'
    icon: mdi:thermometer  

  - platform: mqtt
    name: m6800 860pro Total Gb Written
    state_topic: "m6800/smart/860pro_512gb_lba_written"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ ( value | float * 512 / 1024 / 1024 / 1024 ) |round(1) }}"
    unit_of_measurement: 'Gb'
    icon: mdi:chip

  - platform: mqtt
    name: m6800 860pro Power On Hours
    state_topic: "m6800/smart/860pro_512gb_power_on_hours"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ ( value | int) }}"
    unit_of_measurement: 'h'
    icon: mdi:timer

  - platform: template
    sensors:
      m6800_860pro_gb_per_hour:
        friendly_name: m6800 860pro gb per hour
        value_template: >
          {%if states('sensor.m6800_860pro_power_on_hours')|float(-9999) == -9999%}
          0
          {%else%}
          {{(states('sensor.m6800_860pro_total_gb_written')|float / states('sensor.m6800_860pro_power_on_hours')|float)|round(2)}}
          {%endif%}
        icon_template: mdi:chip
        unit_of_measurement: 'Gb\h'
      m6800_860pro_calc_life_left:
        friendly_name: m6800 860pro Calculated Life Left
        unit_of_measurement: years
        entity_id: sensor.m6800_cpu_load
        icon_template: mdi:calendar-clock
        value_template: >-
          {%set tbw =  600*1024%}
          {%set per_day = states('sensor.m6800_860pro_gb_per_hour')|float*24%}
          {%set total = states('sensor.m6800_860pro_total_gb_written')|float%}
          {%if states('sensor.m6800_860pro_power_on_hours')|float(-9999) == -9999%}
          unknown
          {%else%}
            {%if per_day == 0 %}
            {{ ((tbw-total)/1/365)|round(2)  }}
            {%else%}
            {{ ((tbw-total)/per_day/365)|round(2)  }}
            {%endif%}
          {%endif%}

  - platform: mqtt
    name: m6800 840evo Total Gb Written
    state_topic: "m6800/smart/840evo_500gb_lba_written"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ ( value | float * 512 / 1024 / 1024 / 1024 ) |round(1) }}"
    unit_of_measurement: 'Gb'
    icon: mdi:chip

  - platform: template
    sensors:
      m6800_840evo_gb_per_hour:
        friendly_name: m6800 840evo gb per hour
        value_template: >
          {%if states('sensor.m6800_840evo_power_on_hours')|float(-9999) == -9999%}
          0
          {%else%}
          {{(states('sensor.m6800_840evo_total_gb_written')|float / states('sensor.m6800_840evo_power_on_hours')|float)|round(2)}}
          {%endif%}
        icon_template: mdi:chip
        unit_of_measurement: 'Gb\h'
      m6800_840evo_calc_life_left:
        friendly_name: m6800 840evo Calculated Life Left
        unit_of_measurement: years
        entity_id: sensor.m6800_cpu_load
        icon_template: mdi:calendar-clock
        value_template: >-
          {%set tbw =  72*1024%}
          {%set per_day = states('sensor.m6800_840evo_gb_per_hour')|float*24%}
          {%set total = states('sensor.m6800_840evo_total_gb_written')|float%}
          {%if states('sensor.m6800_840evo_power_on_hours')|float(-9999) == -9999%}
          unknown
          {%else%}
            {%if per_day == 0 %}
            {{ ((tbw-total)/1/365)|round(2)  }}
            {%else%}
            {{ ((tbw-total)/per_day/365)|round(2)  }}
            {%endif%}
          {%endif%}
          
  - platform: mqtt
    name: m6800 840evo Power On Hours
    state_topic: "m6800/smart/840evo_500gb_power_on_hours"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ ( value | int) }}"
    unit_of_measurement: 'h'
    icon: mdi:timer

  - platform: mqtt
    name: m6800 Drive E Usage
    state_topic: "m6800/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[6].Children[1].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:harddisk

  - platform: mqtt
    name: m6800 Drive C Temperature
    state_topic: "m6800/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[7].Children[0].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: m6800 Drive C Usage
    state_topic: "m6800/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[7].Children[1].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon:  mdi:chip

  - platform: mqtt
    name: m6800 Drive D Temperature
    state_topic: "m6800/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[4].Children[0].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: m6800 Drive D Usage
    state_topic: "m6800/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[4].Children[1].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:harddisk

  - platform: mqtt
    name: m6800 Drive F Temperature
    state_topic: "m6800/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[5].Children[0].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: m6800 Drive F Usage
    state_topic: "m6800/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[5].Children[1].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon:  mdi:chip

  - platform: mqtt
    name: m6800 CPU Temperature
    state_topic: "m6800/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[1].Children[1].Children[4].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '°C'
    icon: mdi:thermometer

  - platform: mqtt
    name: m6800 Memory Usage
    state_topic: "m6800/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[2].Children[0].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%'
    icon: mdi:memory
    
  - platform: mqtt
    name: m6800 CPU Load
    state_topic: "m6800/telemetry"
    qos: 0
    expire_after: 150
    force_update: true
    value_template: "{{ value_json.Children[0].Children[1].Children[2].Children[0].Value.split(' ')[0].replace(',','.') | int }}"
    unit_of_measurement: '%' 
    icon: mdi:speedometer

#  - platform: rest
#    name: cont0_cpu_load
#    resource: http://192.168.1.14:61208/api/3/docker
#    value_template: '{{ value_json["containers"][0].cpu_percent | round(0) }}'
#    unit_of_measurement: "%"
#    scan_interval: 5
#  - platform: rest
#    name: cont0_mem_usage
#    resource: http://192.168.1.14:61208/api/3/docker
#    value_template: '{{ ( value_json["containers"][0].memory.usage / 1024 / 1024 ) | int }}'
#    unit_of_measurement: "Mb"
#    scan_interval: 5
#  - platform: rest
#    name: cont0_name
#    resource: http://192.168.1.14:61208/api/3/docker
#    value_template: '{{ value_json["containers"][0].name }}'
#    scan_interval: 30