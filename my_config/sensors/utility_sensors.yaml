  - platform: statistics
    name: server_daily_power_consumption
    entity_id: sensor.psu_total_watts
    sampling_size: 1440

# ############################################################################
# Utility (water + Power Cost sensor
# ############################################################################
  - platform: template
    sensors:
      server_daily_cost:
        friendly_name: Server Average Daily Running Cost
        value_template: "{{(states('input_number.tariff_energy_day')|float*16*states('sensor.server_daily_power_consumption')|float/1000+states('input_number.tariff_energy_night')|float*8*states('sensor.server_daily_power_consumption')|float/1000)|round(2)}}"
        unit_of_measurement: 'rub'
        icon_template: mdi:currency-rub
      server_monthly_cost:
        friendly_name: Server Average Monthly Running Cost
        value_template: "{{(states('sensor.server_daily_cost')|float*31)|round(0) }}"
        unit_of_measurement: 'rub'
        icon_template: mdi:currency-rub
      

      utility_cost:
        unit_of_measurement: 'rub'
        icon_template: mdi:currency-rub
        value_template: "{{ (states('sensor.power_consumption_month_cost')|float + states('sensor.water_cost')|float)|round(0) }}"
        friendly_name: "Utility Cost/Month"

# ############################################################################
# Power monitoring sensors
# ############################################################################
      power_consumption_light:
        friendly_name: 'Power light/Current'
        unit_of_measurement: W
        icon_template: mdi:gauge
        value_template: "{{ ((states('switch.wall_switch_right_158d0002a36f7f')|replace('on','1'))|int*32) + ((states('switch.wall_switch_left_158d0002a36f7f')|replace('on','1'))|int*10) + ((states('switch.wall_switch_right_158d0002a36e26')|replace('on','1'))|int*20) + ((states('switch.wall_switch_left_158d0002a36e26')|replace('on','1'))|int*7) + (state_attr('switch.plug_158d0002482619','load_power')|float(0)|float(0)) + (state_attr('switch.plug_158d00020b4971','load_power')|float(0)|float(0)) + ((states('light.round_led_s')|replace('on','1'))|int*50) + ((states('switch.wall_switch_158d000248bf53')|replace('on','1'))|int*16) + ((states('switch.wall_switch_left_158d000223921b')|replace('on','1'))|int*32.5) + ((states('switch.wall_switch_right_158d000253f04a')|replace('on','1'))|int*32.5) + (state_attr('switch.wall_plug_158d00023e5812','load_power')|float(0)|float(0))|float + state_attr('switch.plug_158d000216528c','load_power')|float(0)|float(0)|float }}"

      power_consumption_socket:
        value_template: "{{ (states('sensor.shp6_socket_2_w')|float + state_attr('switch.wall_plug_158d0001f2630e','load_power')|float(0)|float(0) + state_attr('switch.wall_plug_158d00024517fe','load_power')|float(0)|float(0) + state_attr('switch.wall_plug_158d000230fc52','load_power')|float(0)|float(0) + state_attr('switch.wall_plug_158d000239097a','load_power')|float(0)|float(0) + state_attr('switch.wall_plug_158d0002395d58','load_power')|float(0)|float(0)+ state_attr('switch.plug_158d0002468fbd','load_power')|float(0)|float(0)+ state_attr('switch.wall_plug_158d0002395dc9','load_power')|float(0)|float(0)+ state_attr('switch.wall_plug_158d000246776f','load_power')|float(0)|float(0)+ state_attr('switch.wall_plug_158d0002467773','load_power')|float(0)|float(0)+ state_attr('switch.plug_158d000205a835','load_power')|float(0)|float(0)+ state_attr('switch.wall_plug_158d000249b26b','load_power')|float(0)|float(0)+ 3 + state_attr('switch.wall_plug_158d0002451850','load_power')|float(0)+ state_attr('switch.wall_plug_158d0002476ed1','load_power')|float(0)+ state_attr('switch.wall_plug_158d000249b25b','load_power')|float(0)+ state_attr('switch.plug_158d000232481a','load_power')|float(0)+ state_attr('switch.plug_158d0002924790','load_power')|float(0)+ state_attr('switch.plug_158d0001e85086','load_power')|float(0) + state_attr('switch.plug_158d000358c773','load_power')|float(0) + states.fan.humidifier2.state|replace('on','1')|int*10 + 5 + 5 + 1)|round(2) }}"
        unit_of_measurement: W
        friendly_name: 'Power socket/Current'
        icon_template: mdi:gauge

      power_consumption:
        value_template: "{{ ((states('sensor.power_consumption_light')|float + states('sensor.power_consumption_socket')|float))|round(2) }}"
        unit_of_measurement: W
        icon_template: mdi:flash
        friendly_name: 'Power/Current'

      power_consumption_k:
        value_template: "{{ ( ((states('switch.wall_switch_right_158d0002a36f7f')|replace('on','1'))|int*32) + state_attr('switch.plug_158d000216528c','load_power')|float(0)+ state_attr('switch.wall_plug_158d0002451850','load_power')|float(0)+ state_attr('switch.wall_plug_158d0002476ed1','load_power')|float(0)+ state_attr('switch.wall_plug_158d000249b25b','load_power')|float(0)+ state_attr('switch.plug_158d0001e85086','load_power')|float(0)+ state_attr('switch.plug_158d000232481a','load_power')|float(0)+ 1 ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power K'
        icon_template: mdi:gauge
      
      power_consumption_t:
        value_template: "{{ ( ((states('switch.wall_switch_left_158d0002a36f7f')|replace('on','1'))|int*10) ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power T'
        icon_template: mdi:gauge
      
      power_consumption_b:
        value_template: "{{ ( ((states('switch.wall_switch_right_158d0002a36e26')|replace('on','1'))|int*20) ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power B'
        icon_template: mdi:gauge
      
      power_consumption_hs:
        value_template: "{{ ( ((states('switch.wall_switch_left_158d0002a36e26')|replace('on','1'))|int*7) + state_attr('switch.wall_plug_158d000249b26b','load_power')|float(0)+ state_attr('switch.plug_158d0002924790','load_power')|float(0)) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power HS'
        icon_template: mdi:gauge

      power_consumption_mb:
        value_template: "{{ ( state_attr('switch.plug_158d000322e30c','load_power')|float(0) + state_attr('switch.plug_158d0002482619','load_power')|float(0)+ state_attr('switch.wall_plug_158d0002467773','load_power')|float(0)+ state_attr('switch.plug_158d000205a835','load_power')|float(0)+ 1 ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power MB'
        icon_template: mdi:gauge
        
      power_consumption_v:
        value_template: "{{ ( state_attr('switch.plug_158d00020b4971','load_power')|float(0)|float(0) + state_attr('switch.plug_158d0002468fbd','load_power')|float(0)|float(0) + state_attr('switch.wall_plug_158d0002395dc9','load_power')|float(0)|float(0)+ state_attr('switch.wall_plug_158d000246776f','load_power')|float(0)|float(0)+ 1 ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power V'
        icon_template: mdi:gauge
      
      power_consumption_s:
        value_template: "{{ ( ((states('light.round_led_s')|replace('on','1'))|int*50) +states('sensor.shp6_socket_2_w')|float + state_attr('switch.wall_plug_158d000239097a','load_power')|float(0)|float(0)+ state_attr('switch.wall_plug_158d0002395d58','load_power')|float(0)|float(0)+ state_attr('switch.plug_158d00023a657a','load_power')|float(0)|float(0)+ state_attr('switch.power_strip_s','load_power')|float(0)|float(0) + states.fan.humidifier2.state|replace('on','1')|int*10 ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power S'
        icon_template: mdi:gauge
      
      power_consumption_st:
        value_template: "{{ ( ((states('switch.wall_switch_158d000248bf53')|replace('on','1'))|int*16) ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power St'
        icon_template: mdi:gauge
      
      power_consumption_hb:
        value_template: "{{ ( states('switch.wall_switch_left_158d000223921b')|replace('on',1)|int*32.5 + states('switch.wall_switch_right_158d000253f04a')|replace('on',1)|int*32.5 + state_attr('switch.wall_plug_158d00023e5812','load_power')|float(0)|float(0) + state_attr('switch.wall_plug_158d0001f2630e','load_power')|float(0)|float(0) + state_attr('switch.wall_plug_158d00024517fe','load_power')|float(0)|float(0) + state_attr('switch.wall_plug_158d000230fc52','load_power')|float(0)|float(0) + state_attr('switch.plug_158d000358c773','load_power')|float(0)|float(0) + 2 + state_attr('switch.plug_158d000322e1d9','load_power')|float(0)|float(0) ) | round(0) }}"
        unit_of_measurement: W
        friendly_name: 'Power HB'
        icon_template: mdi:gauge
    
      voltage:
        value_template: "{{((states('sensor.ippon_hb_input_voltage')|float(220)+states('sensor.ippon_mb_input_voltage')|float(220)+states('sensor.cyber650_input_voltage')|float(220))/3)|round(1)}}"
        unit_of_measurement: "V"
        icon_template: mdi:gauge
      
      total_current:
        icon_template: mdi:current-ac
        value_template: "{{ (((states('sensor.power_consumption')|float / states('sensor.voltage')|float)|float))|round(1) }}"
        unit_of_measurement: "A"
        friendly_name: "Total current"

      power_t1:
        unit_of_measurement: kWh
        icon_template: mdi:gauge
        friendly_name: 'Power meter/T1'
        value_template: "{{ states('input_number.power_t1')|round(2) }}"
      power_t2:
        unit_of_measurement: kWh
        icon_template: mdi:gauge
        friendly_name: 'Power meter/T2'
        value_template: "{{ states('input_number.power_t2')|round(2) }}"

      power_consumption_month_t1:
        value_template: "{{ states('input_number.power_consumption_month_t1')|round(2) }}"
        unit_of_measurement: kWh
        icon_template: mdi:gauge
        friendly_name: 'Power/Month/T1'
      power_consumption_month_t2:
        value_template: "{{ states('input_number.power_consumption_month_t2')|round(2) }}"
        unit_of_measurement: kWh
        icon_template: mdi:gauge
        friendly_name: 'Power/Month/T2'

      power_consumption_month_cost:
        friendly_name: "Power/Month"
        icon_template: mdi:currency-rub
        unit_of_measurement: 'rub'
        value_template: "{{ (states('sensor.power_consumption_month_t1')|float*states('input_number.tariff_energy_day')|float + states('sensor.power_consumption_month_t2')|float*states('input_number.tariff_energy_night')|float) |round(2) }}"
      power_consumption_month_t1_cost:
        friendly_name: "Power/Month/T1"
        icon_template: mdi:currency-rub
        unit_of_measurement: 'rub'
        value_template: "{{ (states('sensor.power_consumption_month_t1')|float*states('input_number.tariff_energy_day')|float) |round(2) }}"
      power_consumption_month_t2_cost:
        friendly_name: "Power/Month/T2"
        icon_template: mdi:currency-rub
        unit_of_measurement: 'rub'
        value_template: "{{ (states('sensor.power_consumption_month_t2')|float*states('input_number.tariff_energy_night')|float) |round(2) }}"

# ############################################################################
# Water monitoring sensors
# ############################################################################
      cold_water_meter:
        friendly_name: "Cold water meter"
        icon_template: mdi:counter
        unit_of_measurement: 'm3'
        value_template: "{{ ((states('input_number.cold_water_meter'))|float) | round(2) }}"
 
      hot_water_meter:
        friendly_name: "Hot water meter"
        icon_template: mdi:counter
        unit_of_measurement: 'm3'
        value_template: "{{ ((states('input_number.hot_water_meter'))|float) | round(2) }}"
  
      cold_water_month:
        friendly_name: "Cold water/Month"
        icon_template: mdi:counter
        unit_of_measurement: 'm3'
        value_template: "{{ (((states('input_number.cold_water_meter_month'))|float))|round(2) }}"
  
      hot_water_month:
        friendly_name: "Hot water/Month"
        icon_template: mdi:counter
        unit_of_measurement: 'm3'
        value_template: "{{ (((states('input_number.hot_water_meter_month'))|float))|round(2) }}"

      cold_water_cost:
        friendly_name: "Cold water"
        icon_template: mdi:currency-rub
        unit_of_measurement: 'rub'
        value_template: "{{ (((states('input_number.cold_water_meter_month'))|float) * states('input_number.tariff_cold_water')|float)|round(2) }}"
  
      hot_water_cost:
        friendly_name: "Hot water"
        icon_template: mdi:currency-rub
        unit_of_measurement: 'rub'
        value_template: "{{ (((states('input_number.hot_water_meter_month'))|float) * states('input_number.tariff_hot_water')|float)|round(2) }}"
  
      water_cost:
        friendly_name: "Water cost"
        icon_template: mdi:currency-rub
        unit_of_measurement: 'rub'
        value_template: >
          {{ (( (((states('input_number.cold_water_meter_month'))|float))*states('input_number.tariff_cold_water')|float) +
          (((states('input_number.hot_water_meter_month'))|float)*states('input_number.tariff_hot_water')|float) )|round(2) }}

      water:
        friendly_name: "Water total"
        unit_of_measurement: 'm3'
        value_template: >
          {{ (( (((states('input_number.cold_water_meter_month'))|float))) +
          (((states('input_number.hot_water_meter_month'))|float)) )|round(2) }}
      
      water_change_1m:
        value_template: "{{ states.sensor.total_water_1m.attributes.change }}"
        friendly_name: "Water change 1m"
      water_change_10m:
        value_template: "{{ states.sensor.total_water_10m.attributes.change }}"
        friendly_name: "Water change 10m"
      water_change_30m:
        value_template: "{{ states.sensor.total_water_30m.attributes.change }}"
        friendly_name: "Water change 30m"
      water_change_60m:
        value_template: "{{ states.sensor.total_water_60m.attributes.change }}"
        friendly_name: "Water change 60m"
  

# ############################################################################
# Water statistics sensors
# ############################################################################
  - platform: statistics
    name: Total water 1m
    entity_id: sensor.water
    max_age:
      minutes: 1
  - platform: statistics
    name: Total Water 10m
    entity_id: sensor.water
    max_age:
      minutes: 10
  - platform: statistics
    name: Total Water 30m
    entity_id: sensor.water
    max_age:
      minutes: 30
  - platform: statistics
    name: Total Water 60m
    entity_id: sensor.water
    max_age:
      minutes: 60
