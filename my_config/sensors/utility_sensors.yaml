  - platform: statistics
    name: server_daily_power_consumption
    entity_id: sensor.psu_total_watts
    sampling_size: 1440

# ############################################################################
# Utility (water + Power Cost sensor
# ############################################################################

  - platform: min_max
    type: mean
    name: Voltage
    round_digits: 1
    entity_ids:
      - sensor.ippon_1200_input_voltage
      - sensor.ippon_1050_input_voltage
      - sensor.cyber650_input_voltage
      - sensor.shp2_socket_1_v
      - sensor.shp2_socket_2_v
      - sensor.shp6_socket_1_v
      - sensor.shp6_socket_2_v
      - sensor.sonoff_pow_r2_1_voltage

  - platform: template
    sensors:
      server_daily_cost:
        friendly_name: Server Average Daily Running Cost
        value_template: "{{(states('input_number.tariff_energy_day')|float*16*states('sensor.server_daily_power_consumption')|float/1000+states('input_number.tariff_energy_night')|float*8*states('sensor.server_daily_power_consumption')|float/1000)|round(2)}}"
        unit_of_measurement: 'rub'
        icon_template: mdi:currency-rub
      server_monthly_cost:
        friendly_name: Server Average Monthly Running Cost
        value_template: "{{(states('sensor.server_daily_cost')|float*31)|round(0) }}"
        unit_of_measurement: 'rub'
        icon_template: mdi:currency-rub
      

      utility_cost:
        unit_of_measurement: 'rub'
        icon_template: mdi:currency-rub
        value_template: "{{ (states('sensor.power_consumption_month_cost')|float + states('sensor.water_cost')|float)|round(0) }}"
        friendly_name: "Utility Cost/Month"

# ############################################################################
# Power monitoring sensors
# ############################################################################

      power_consumption:
        value_template: "{{ states('sensor.power_consumption_k')|int + states('sensor.power_consumption_t')|int + states('sensor.power_consumption_b')|int + states('sensor.power_consumption_hs')|int + states('sensor.power_consumption_mb')|int + states('sensor.power_consumption_st')|int + states('sensor.power_consumption_hb')|int +states('sensor.power_consumption_v')|int + states('sensor.power_consumption_s')|int }}"
        unit_of_measurement: W
        icon_template: mdi:flash
        friendly_name: 'Power/Current'
        #entity_id: sensor.time

      power_consumption_k:
        value_template: "{{ ( ((states('light.round_led_k')|replace('on','1'))|int*32*state_attr('light.round_led_k','brightness')|int/255)|float + state_attr('switch.0x00158d0002451850_switch','power')|float + state_attr('switch.0x00158d0002476ed1_switch','power')|float + state_attr('switch.0x00158d000249b25b_switch','power')|float + state_attr('switch.0x00158d0001e85086_switch','power')|float + state_attr('switch.0x00158d000353a2e3_switch','power')|float ) |round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power K'
        icon_template: mdi:gauge
        #entity_id: sensor.time
      
      power_consumption_t:
        value_template: "{{ ( ((states('switch.0x00158d0002a36f7f_switch_left')|replace('on','1'))|int * 10 )|float)|round(0) }}"
        unit_of_measurement: W
        friendly_name: 'Power T'
        icon_template: mdi:gauge
        #entity_id: sensor.time
      
      power_consumption_b:
        value_template: "{{ ( (states('switch.0x04cf8cdf3c7a9a48_switch_center')|replace('on','1'))|int*20 +states('sensor.sonoff_pow_r2_1_power')|float + 1 )|round(0) }}"  #state_attr('switch.0x00158d0001a248e9_switch_l1','power')|float + state_attr('switch.0x00158d000366815b_switch_l1','power')|float + state_attr('switch.0x00158d0001a248e3_switch_l1','power')|float +
        unit_of_measurement: W
        friendly_name: 'Power B'
        icon_template: mdi:gauge
        #entity_id: sensor.time
      
      power_consumption_hs:
        value_template: "{{ ( ((states('switch.0x04cf8cdf3c7a9a48_switch_left')|replace('on','1'))|int*7) + state_attr('switch.0x00158d000249b26b_switch','power')|float + state_attr('switch.0x00158d0002924790_switch','power')|float ) | round(0) }}"
        unit_of_measurement: W
        friendly_name: 'Power HS'
        icon_template: mdi:gauge
        #entity_id: sensor.time

      power_consumption_mb:
        value_template: "{{ ( ((states('light.round_led_mb')|replace('on','1'))|int*50*state_attr('light.round_led_mb','brightness')|int/255)|float + state_attr('switch.0x00158d000322e30c_switch','power')|float + state_attr('switch.0x00158d0002467773_switch','power')|float + state_attr('switch.0x00158d000205a835_switch','power')|float + 1 ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power MB'
        icon_template: mdi:gauge
        #entity_id: sensor.time
        
      power_consumption_v:
        value_template: "{{ ( ((states('light.square_led_v')|replace('on','1'))|int*90*state_attr('light.square_led_v','brightness')|int/255)|float + state_attr('switch.0x00158d0002468fbd_switch','power')|float + state_attr('switch.0x00158d0002395dc9_switch','power')|float + state_attr('switch.0x00158d000246776f_switch','power')|float + 1 ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power V'
        icon_template: mdi:gauge
        #entity_id: sensor.time
      
      power_consumption_s:
        value_template: "{{ ( ((states('light.round_led_s')|replace('on','1'))|int*50*state_attr('light.round_led_s','brightness')|int/255)|float + state_attr('switch.0x00158d00035f44a7_switch','power')|float+ state_attr('switch.0x00158d000239097a_switch','power')|float + state_attr('switch.0x00158d0002395d58_switch','power')|float ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power S'
        icon_template: mdi:gauge
        #entity_id: sensor.time
      
      power_consumption_st:
        value_template: "{{ ( ((states('switch.0x00158d0002a36433_switch_right')|replace('on','1'))|int*16)+((states('switch.0x00158d0002a36433_switch_left')|replace('on','1'))|int*16) ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power St'
        icon_template: mdi:gauge
        #entity_id: sensor.time
      
      power_consumption_hb:
        value_template: "{{ ( states('switch.0x00158d000223921b_switch_left')|replace('on',1)|int*32.5 + states('switch.0x00158d000253f04a_switch_right')|replace('on',1)|int*32.5 + state_attr('switch.0x00158d00023e5812_switch','power')|float + state_attr('switch.0x00158d0001f2630e_switch','power')|float + state_attr('switch.0x00158d00024517fe_switch','power')|float + state_attr('switch.0x00158d000230fc52_switch','power')|float + state_attr('switch.0x00158d000358c773_switch','power')|float + 2 + state_attr('switch.0x00158d000322e1d9_switch','power')|float ) | round(0) }}"
        unit_of_measurement: W
        friendly_name: 'Power HB'
        icon_template: mdi:gauge
        #entity_id: sensor.time

      total_current:
        icon_template: mdi:current-ac
        value_template: "{{ (((states('sensor.power_consumption')|float / states('sensor.voltage')|float)|float))|round(1) }}"
        unit_of_measurement: "A"
        friendly_name: "Total current"

# New
      power_meter_t1:
        unit_of_measurement: kWh
        icon_template: mdi:gauge
        friendly_name: 'Power meter T1'
        value_template: "{{(states('input_number.power_meter_t1')|float + states('sensor.energy_monthly_day')|float)|round(2) }}"

      power_meter_t2:
        unit_of_measurement: kWh
        icon_template: mdi:gauge
        friendly_name: 'Power meter T2'
        value_template: "{{(states('input_number.power_meter_t2')|float + states('sensor.energy_monthly_night')|float)|round(2) }}"

      power_meter_t1_prev:
        unit_of_measurement: kWh
        icon_template: mdi:gauge
        friendly_name: 'Power meter T1 Prev'
        value_template: "{{state_attr('sensor.energy_monthly_day','last_period')|float }}"

      power_meter_t2_prev:
        unit_of_measurement: kWh
        icon_template: mdi:gauge
        friendly_name: 'Power meter T2 Prev'
        value_template: "{{state_attr('sensor.energy_monthly_night','last_period')|float }}"

#



      power_t1:
        unit_of_measurement: kWh
        icon_template: mdi:gauge
        friendly_name: 'Power meter/T1'
        value_template: "{{ states('input_number.power_t1')|round(2) }}"
      power_t2:
        unit_of_measurement: kWh
        icon_template: mdi:gauge
        friendly_name: 'Power meter/T2'
        value_template: "{{ states('input_number.power_t2')|round(2) }}"

      power_consumption_month_t1:
        value_template: "{{ states('input_number.power_consumption_month_t1')|round(2) }}"
        unit_of_measurement: kWh
        icon_template: mdi:gauge
        friendly_name: 'Power/Month/T1'
      power_consumption_month_t2:
        value_template: "{{ states('input_number.power_consumption_month_t2')|round(2) }}"
        unit_of_measurement: kWh
        icon_template: mdi:gauge
        friendly_name: 'Power/Month/T2'

      power_consumption_month_cost:
        friendly_name: "Power/Month"
        icon_template: mdi:currency-rub
        unit_of_measurement: 'rub'
        value_template: "{{ (states('sensor.power_consumption_month_t1')|float*states('input_number.tariff_energy_day')|float + states('sensor.power_consumption_month_t2')|float*states('input_number.tariff_energy_night')|float) |round(2) }}"
      power_consumption_month_t1_cost:
        friendly_name: "Power/Month/T1"
        icon_template: mdi:currency-rub
        unit_of_measurement: 'rub'
        value_template: "{{ (states('sensor.power_consumption_month_t1')|float*states('input_number.tariff_energy_day')|float) |round(2) }}"
      power_consumption_month_t2_cost:
        friendly_name: "Power/Month/T2"
        icon_template: mdi:currency-rub
        unit_of_measurement: 'rub'
        value_template: "{{ (states('sensor.power_consumption_month_t2')|float*states('input_number.tariff_energy_night')|float) |round(2) }}"

# ############################################################################
# Water monitoring sensors
# ############################################################################
      cold_water_meter:
        friendly_name: "Cold water meter"
        icon_template: mdi:counter
        unit_of_measurement: 'm3'
        value_template: "{{ ((states('input_number.cold_water_meter'))|float) | round(2) }}"
 
      hot_water_meter:
        friendly_name: "Hot water meter"
        icon_template: mdi:counter
        unit_of_measurement: 'm3'
        value_template: "{{ ((states('input_number.hot_water_meter'))|float) | round(2) }}"
  
      cold_water_month:
        friendly_name: "Cold water/Month"
        icon_template: mdi:counter
        unit_of_measurement: 'm3'
        value_template: "{{ (((states('input_number.cold_water_meter_month'))|float))|round(2) }}"
  
      hot_water_month:
        friendly_name: "Hot water/Month"
        icon_template: mdi:counter
        unit_of_measurement: 'm3'
        value_template: "{{ (((states('input_number.hot_water_meter_month'))|float))|round(2) }}"

      cold_water_cost:
        friendly_name: "Cold water"
        icon_template: mdi:currency-rub
        unit_of_measurement: 'rub'
        value_template: "{{ (((states('input_number.cold_water_meter_month'))|float) * states('input_number.tariff_cold_water')|float)|round(2) }}"
  
      hot_water_cost:
        friendly_name: "Hot water"
        icon_template: mdi:currency-rub
        unit_of_measurement: 'rub'
        value_template: "{{ (((states('input_number.hot_water_meter_month'))|float) * states('input_number.tariff_hot_water')|float)|round(2) }}"
  
      water_cost:
        friendly_name: "Water cost"
        icon_template: mdi:currency-rub
        unit_of_measurement: 'rub'
        value_template: >
          {{ (( (((states('input_number.cold_water_meter_month'))|float))*states('input_number.tariff_cold_water')|float) +
          (((states('input_number.hot_water_meter_month'))|float)*states('input_number.tariff_hot_water')|float) )|round(2) }}

      water:
        friendly_name: "Water total"
        unit_of_measurement: 'm3'
        value_template: >
          {{ (( (((states('input_number.cold_water_meter_month'))|float))) +
          (((states('input_number.hot_water_meter_month'))|float)) )|round(2) }}
      
#       water_change_1m:
#         value_template: "{{ states.sensor.total_water_1m.attributes.change }}"
#         friendly_name: "Water change 1m"
#       water_change_10m:
#         value_template: "{{ states.sensor.total_water_10m.attributes.change }}"
#         friendly_name: "Water change 10m"
#       water_change_30m:
#         value_template: "{{ states.sensor.total_water_30m.attributes.change }}"
#         friendly_name: "Water change 30m"
#       water_change_60m:
#         value_template: "{{ states.sensor.total_water_60m.attributes.change }}"
#         friendly_name: "Water change 60m"
  

# # ############################################################################
# # Water statistics sensors
# # ############################################################################
#   - platform: statistics
#     name: Total water 1m
#     entity_id: sensor.water
#     max_age:
#       minutes: 1
#   - platform: statistics
#     name: Total Water 10m
#     entity_id: sensor.water
#     max_age:
#       minutes: 10
#   - platform: statistics
#     name: Total Water 30m
#     entity_id: sensor.water
#     max_age:
#       minutes: 30
#   - platform: statistics
#     name: Total Water 60m
#     entity_id: sensor.water
#     max_age:
#       minutes: 60
