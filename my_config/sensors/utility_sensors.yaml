
  - platform: template
    sensors:
# ############################################################################
# Utility (water + Power Cost sensor
# ############################################################################
      utility_cost:
        unit_of_measurement: 'rub'
        icon_template: mdi:currency-rub
        value_template: "{{ (states('sensor.power_consumption_month_cost')|float + states('sensor.water_cost')|float)|round(0) }}"
        friendly_name: "Utility Cost/Month"

# ############################################################################
# Power monitoring sensors
# ############################################################################
      power_consumption_socket:
        value_template: "{{ (states.switch.wall_plug_158d0001f2630e.attributes.load_power + states.switch.wall_plug_158d00024517fe.attributes.load_power + states.switch.wall_plug_158d000230fc52.attributes.load_power + states.switch.wall_plug_158d000239097a.attributes.load_power + states.switch.wall_plug_158d0002395d58.attributes.load_power + states.switch.plug_158d0002468fbd.attributes.load_power + states.switch.wall_plug_158d0002395dc9.attributes.load_power + states.switch.wall_plug_158d000246776f.attributes.load_power + states.switch.wall_plug_158d0002467773.attributes.load_power + states.switch.plug_158d000205a835.attributes.load_power + states.switch.wall_plug_158d000249b26b.attributes.load_power + 3 + states.switch.wall_plug_158d0002451850.attributes.load_power + states.switch.wall_plug_158d0002476ed1.attributes.load_power + states.switch.wall_plug_158d000249b25b.attributes.load_power + states.switch.plug_158d000232481a.attributes.load_power + states.switch.plug_158d0002924790.attributes.load_power + states.switch.plug_158d0001e85086.attributes.load_power + ((states.fan.humidifier2.state|replace('on','1'))|int*10) + 5 + 5 )|round(2) }}"
        unit_of_measurement: W
        friendly_name: 'Power socket/Current'
        icon_template: mdi:gauge
      
      power_consumption_k:
        value_template: "{{ ( ((states.switch.wall_switch_right_158d0002a36f7f.state|replace('on','1'))|int*48) + states.switch.plug_158d000216528c.attributes.load_power + states.switch.wall_plug_158d0002451850.attributes.load_power + states.switch.wall_plug_158d0002476ed1.attributes.load_power + states.switch.wall_plug_158d000249b25b.attributes.load_power + states.switch.plug_158d0001e85086.attributes.load_power + states.switch.plug_158d000232481a.attributes.load_power + 1 ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power K'
        icon_template: mdi:gauge
      
      power_consumption_t:
        value_template: "{{ ( ((states.switch.wall_switch_left_158d0002a36f7f.state|replace('on','1'))|int*10) ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power T'
        icon_template: mdi:gauge
      
      power_consumption_b:
        value_template: "{{ ( ((states.switch.wall_switch_right_158d0002a36e26.state|replace('on','1'))|int*20) ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power B'
        icon_template: mdi:gauge
      
      power_consumption_hs:
        value_template: "{{ ( ((states.switch.wall_switch_left_158d0002a36e26.state|replace('on','1'))|int*7) + states.switch.wall_plug_158d000249b26b.attributes.load_power + states.switch.plug_158d0002924790.attributes.load_power ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power HS'
        icon_template: mdi:gauge
        
      power_consumption_temp_hs:
        value_template: "{{ states.switch.plug_158d0002924790.attributes.load_power | round(0) }}"
        unit_of_measurement: W
        friendly_name: 'Power TEMP HS'
        icon_template: mdi:gauge
        
      power_consumption_mb:
        value_template: "{{ ( states.switch.plug_158d0002482619.attributes.load_power + states.switch.wall_plug_158d0002467773.attributes.load_power + states.switch.plug_158d000205a835.attributes.load_power + 1 ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power MB'
        icon_template: mdi:gauge
        
      power_consumption_v:
        value_template: "{{ ( (states.switch.plug_158d00020b4971.attributes.load_power) + states.switch.plug_158d0002468fbd.attributes.load_power + states.switch.wall_plug_158d0002395dc9.attributes.load_power + states.switch.wall_plug_158d000246776f.attributes.load_power + 1 ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power V'
        icon_template: mdi:gauge
      
      power_consumption_s:
        value_template: "{{ ( ((states.switch.wall_switch_left_158d0002a36433.state|replace('on','1'))|int*41) + states.switch.wall_plug_158d000239097a.attributes.load_power + states.switch.wall_plug_158d0002395d58.attributes.load_power + ((states.fan.humidifier2.state|replace('on','1'))|int*10) + states.switch.plug_158d00023a657a.attributes.load_power + 1  ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power S'
        icon_template: mdi:gauge
      
      power_consumption_st:
        value_template: "{{ ( ((states.switch.wall_switch_158d000248bf53.state|replace('on','1'))|int*16) ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power St'
        icon_template: mdi:gauge
      
      power_consumption_hb:
        value_template: "{{ ( ((states.switch.wall_switch_left_158d000223921b.state|replace('on','1'))|int*32.5) + ((states.switch.wall_switch_right_158d000253f04a.state|replace('on','1'))|int*32.5) + (states.switch.wall_plug_158d00023e5812.attributes.load_power) + states.switch.wall_plug_158d0001f2630e.attributes.load_power + states.switch.wall_plug_158d00024517fe.attributes.load_power + states.switch.wall_plug_158d000230fc52.attributes.load_power + 1 + 5 ) | round(0)}}"
        unit_of_measurement: W
        friendly_name: 'Power HB'
        icon_template: mdi:gauge
    
      power_consumption_light:
        friendly_name: 'Power light/Current'
        unit_of_measurement: W
        icon_template: mdi:gauge
        value_template: "{{ ((states.switch.wall_switch_right_158d0002a36f7f.state|replace('on','1'))|int*48) + ((states.switch.wall_switch_left_158d0002a36f7f.state|replace('on','1'))|int*10) + ((states.switch.wall_switch_right_158d0002a36e26.state|replace('on','1'))|int*20) + ((states.switch.wall_switch_left_158d0002a36e26.state|replace('on','1'))|int*7) + (states.switch.plug_158d0002482619.attributes.load_power) + (states.switch.plug_158d00020b4971.attributes.load_power) + ((states.switch.wall_switch_left_158d0002a36433.state|replace('on','1'))|int*41) + ((states.switch.wall_switch_158d000248bf53.state|replace('on','1'))|int*16) + ((states.switch.wall_switch_left_158d000223921b.state|replace('on','1'))|int*32.5) + ((states.switch.wall_switch_right_158d000253f04a.state|replace('on','1'))|int*32.5) + (states.switch.wall_plug_158d00023e5812.attributes.load_power)|float + states.switch.plug_158d000216528c.attributes.load_power|float }}"
      
      voltage:
        value_template: >
          {% if is_state('binary_sensor.ippon_hb_status','off') %}
          220
          {% else %}
          {{states.sensor.ippon_hb_input_voltage.state|round(1)}}
          {% endif %}
        unit_of_measurement: "V"
        icon_template: mdi:gauge
      total_current:
        value_template: "{{ (states('sensor.power_consumption')|float / states('sensor.voltage')|float)|round(1) }}"
        unit_of_measurement: "A"
        friendly_name: "Total current"
      power_consumption:
        value_template: "{{ (states('sensor.power_consumption_light')|float + states('sensor.power_consumption_socket')|float)|round(2) }}"
        unit_of_measurement: W
        icon_template: mdi:gauge
        friendly_name: 'Power/Current'

      power_consumption_t1:
        unit_of_measurement: kW
        icon_template: mdi:gauge
        friendly_name: 'Power/Today/T1'
        value_template: "{{ states('input_number.power_consumption_t1')|round(2) }}"
      power_consumption_t2:
        unit_of_measurement: kW
        icon_template: mdi:gauge
        friendly_name: 'Power/Today/T2'
        value_template: "{{ states('input_number.power_consumption_t2')|round(2) }}"

      power_t1:
        unit_of_measurement: kW
        icon_template: mdi:gauge
        friendly_name: 'Power meter/T1'
        value_template: "{{ states('input_number.power_t1')|round(2) }}"
      power_t2:
        unit_of_measurement: kW
        icon_template: mdi:gauge
        friendly_name: 'Power meter/T2'
        value_template: "{{ states('input_number.power_t2')|round(2) }}"

      power_consumption_month_t1:
        value_template: "{{ states('input_number.power_consumption_month_t1')|round(2) }}"
        unit_of_measurement: kW
        icon_template: mdi:gauge
        friendly_name: 'Power/Month/T1'
      power_consumption_month_t2:
        value_template: "{{ states('input_number.power_consumption_month_t2')|round(2) }}"
        unit_of_measurement: kW
        icon_template: mdi:gauge
        friendly_name: 'Power/Month/T2'

      power_consumption_month_cost:
        friendly_name: "Power/Month"
        icon_template: mdi:currency-rub
        unit_of_measurement: 'rub'
        value_template: "{{ (states('sensor.power_consumption_month_t1')|float*6.29 + states('sensor.power_consumption_month_t2')|float*1.95) |round(2) }}"
      power_consumption_month_t1_cost:
        friendly_name: "Power/Month/T1"
        icon_template: mdi:currency-rub
        unit_of_measurement: 'rub'
        value_template: "{{ (states('sensor.power_consumption_month_t1')|float*6.29) |round(2) }}"
      power_consumption_month_t2_cost:
        friendly_name: "Power/Month/T2"
        icon_template: mdi:currency-rub
        unit_of_measurement: 'rub'
        value_template: "{{ (states('sensor.power_consumption_month_t2')|float*1.95) |round(2) }}"
    
# ############################################################################
# Water monitoring sensors
# ############################################################################
      cold_water_meter:
        friendly_name: "Cold water meter"
        icon_template: mdi:counter
        unit_of_measurement: 'm3'
        value_template: "{{ ((states('input_number.cold_water_meter'))|float)/100 | round(2) }}"
 
      hot_water_meter:
        friendly_name: "Hot water meter"
        icon_template: mdi:counter
        unit_of_measurement: 'm3'
        value_template: "{{ ((states('input_number.hot_water_meter'))|float)/100 | round(2) }}"
  
      cold_water_month:
        friendly_name: "Cold water/Month"
        icon_template: mdi:counter
        unit_of_measurement: 'm3'
        value_template: "{{ (((states('input_number.cold_water_meter_month'))|float)/100)|round(2) }}"
  
      hot_water_month:
        friendly_name: "Hot water/Month"
        icon_template: mdi:counter
        unit_of_measurement: 'm3'
        value_template: "{{ (((states('input_number.hot_water_meter_month'))|float)/100)|round(2) }}"
  
#      cold_water_meter_date1:
#        friendly_name: "Cold water meter 1"
#        icon_template: mdi:calendar
#        unit_of_measurement: 'm3'
#        value_template: "{{ ((((states('counter.cold_water_meter'))|float) - ((states('counter.cold_water_meter_from_date1'))|float))/100)|round(2) }}"
  
#      hot_water_meter_date1:
#        friendly_name: "Hot water meter 1"
#        icon_template: mdi:calendar
#        unit_of_measurement: 'm3'
#        value_template: "{{ ((((states('counter.hot_water_meter'))|float) - ((states('counter.hot_water_meter_from_date1'))|float))/100)|round(2) }}"
  
      cold_water_cost:
        friendly_name: "Cold water"
        icon_template: mdi:currency-rub
        unit_of_measurement: 'rub'
        value_template: "{{ (((states('input_number.cold_water_meter_month'))|float)/100 * 38.7)|round(2) }}"
  
      hot_water_cost:
        friendly_name: "Hot water"
        icon_template: mdi:currency-rub
        unit_of_measurement: 'rub'
        value_template: "{{ (((states('input_number.hot_water_meter_month'))|float)/100 * 191.72)|round(2) }}"
  
      water_cost:
        friendly_name: "Water cost"
        icon_template: mdi:currency-rub
        unit_of_measurement: 'rub'
        value_template: >
          {{ (( (((states('input_number.cold_water_meter_month'))|float))/100*38.7) +
          (((states('input_number.hot_water_meter_month'))|float)/100*191.72) )|round(2) }}
          
      water:
        friendly_name: "Water total"
        unit_of_measurement: 'm3'
        value_template: >
          {{ (( (((states('input_number.cold_water_meter_month'))|float))/100) +
          (((states('input_number.hot_water_meter_month'))|float)/100) )|round(2) }}
      
      water_change_1m:
        value_template: "{{ states.sensor.total_water_1m_mean.attributes.change }}"
        friendly_name: "Water change 1m"
      water_change_10m:
        value_template: "{{ states.sensor.total_water_10m_mean.attributes.change }}"
        friendly_name: "Water change 10m"
      water_change_30m:
        value_template: "{{ states.sensor.total_water_30m_mean.attributes.change }}"
        friendly_name: "Water change 30m"
      water_change_60m:
        value_template: "{{ states.sensor.total_water_60m_mean.attributes.change }}"
        friendly_name: "Water change 60m"

# ############################################################################
# Water statistics sensors
# ############################################################################
  - platform: statistics
    name: Total water 1m
    entity_id: sensor.water
    max_age:
      minutes: 1
  - platform: statistics
    name: Total Water 10m
    entity_id: sensor.water
    max_age:
      minutes: 10
  - platform: statistics
    name: Total Water 30m
    entity_id: sensor.water
    max_age:
      minutes: 30
  - platform: statistics
    name: Total Water 60m
    entity_id: sensor.water
    max_age:
      minutes: 60
