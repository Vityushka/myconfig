# #####################################################################################
#
# SASHA - Lights
#
# #####################################################################################
# Sasha Table Lamp (Philips E27)
# ##################################
- alias: sasha_table_lamp_on_if_lamp_off
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.0x00158d0001f3627d_click
      to: 'single'
    - platform: state
      entity_id: sensor.0x00158d0003fa6077_click
      to: 'right'
  action:
    - service: light.toggle
      entity_id: light.0x00124b000a9e26af_light #light.philips_e27_s
      data_template:
        transition: 1
        brightness_pct: >
          {%- if is_state('binary_sensor.tod_day','off') -%}
          3
          {%- else -%}
          100
          {% endif %}
        kelvin: >
          {%- if is_state('binary_sensor.tod_day','off') -%}
          3000
          {%- else -%}
          5000
          {% endif %}
      

# ##################################        
# Sasha Main Lamp (Xiaomi Round LED) - On
# ##################################
- alias: sasha_main_lamp_on_if_lamp_off
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.0x00158d0003fa6077_click
      to: 'left'
  condition:
    - condition: state
      entity_id: light.round_led_s
      state: 'off'
  action:
    - service: light.turn_on
      entity_id: light.round_led_s
      data_template:
        brightness_pct: 100
        kelvin: 5000


# ##################################
# Sasha Main Lamp (Xiaomi Round LED) - Off
# ##################################
- alias: sasha_main_lamp_off_if_lamp_on
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.0x00158d0003fa6077_click
      to: 'left'
  condition:
    - condition: state
      entity_id: light.round_led_s
      state: 'on'    
  action:
    - service: light.turn_off
      entity_id: light.round_led_s

# ##################################
# Sasha Table Lamp (Philips E27) - Switch to Bright
# ##################################
- alias: sasha_table_lamp_bright
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.0x00158d0001f3627d_click
      to: 'double'
  action:
    # - service: xiaomi_miio.light_set_scene
    #   entity_id: light.philips_e27_s
    #   data:
    #     scene: 1
    - service: light.turn_on
      entity_id: light.0x00124b000a9e26af_light
      data_template:
        transition: 1
        brightness_pct: 100
        kelvin: 5000

# ##################################
# Sasha Table Lamp (Philips E27) - Switch to Mid-Night
# ##################################
- alias: sasha_table_lamp_night
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.0x00158d0001f3627d_click
      to: 'long'
  action:
    # - service: xiaomi_miio.light_set_scene
    #   entity_id: light.philips_e27_s
    #   data:
    #     scene: 4
    - service: light.turn_on
      entity_id: light.0x00124b000a9e26af_light
      data_template:
        transition: 1
        brightness_pct: 3
        kelvin: 3000

# ##################################
# Sasha - Table Lamp Off (scene4) when main turned on
# ################################## 
- alias: sasha_table_lamp_off_night_mode_main_on
  initial_state: 'true'
  trigger:
    - platform: time_pattern
      minutes: "/1"
  condition:
    - condition: template
      value_template: "{{ state_attr('light.0x00124b000a9e26af_light','brightness')|int < 10 }}" #"{{state_attr('light.philips_e27_s','scene')|int == 4}}"
    - condition: state
      entity_id: light.round_led_s
      state: 'on'
    - condition: state
      entity_id: light.0x00124b000a9e26af_light #light.philips_e27_s
      state: 'on'
    - condition: state
      entity_id: binary_sensor.tod_day
      state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.0x00124b000a9e26af_light #light.philips_e27_s

# ##################################
# Sasha - Auto Night Light
# ##################################
- alias: sasha_auto_nightlight_on
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: binary_sensor.0x00158d0003140824_occupancy, binary_sensor.0x00158d000224f89f_occupancy
      #from: 'off'
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: binary_sensor.tod_day
        state: 'off'
      - condition: state
        entity_id: person.sasha
        state: 'home'
  action:
    # - service: light.turn_on
    #   entity_id: light.philips_e27_s
    # - service: xiaomi_miio.light_set_scene
    #   entity_id: light.philips_e27_s
    #   data:
    #       scene: 4
    - service: light.turn_on
      entity_id: light.0x00124b000a9e26af_light
      data_template:
        transition: 1
        brightness_pct: 3
        kelvin: 3000

# ##################################
# Sasha - Auto Night Light Off 30m without movements
# ##################################
- alias: sasha_night_auto_off_30m
  initial_state: 'true'
  trigger:
    # - platform: state
    #   entity_id: binary_sensor.motion_sensor_158d000224f89f
    #   to: 'off'
    #   for:
    #     minutes: 30
    - platform: state
      entity_id: binary_sensor.motion_s #binary_sensor.0x00158d0003140824_occupancy, binary_sensor.0x00158d000224f89f_occupancy
      from: 'on'
      to: 'off'
      for:
        minutes: 30
  condition:
    - condition: state
      entity_id: binary_sensor.tod_day
      state: 'off'
  action:
    - service: light.turn_off
      entity_id: light.0x00124b000a9e26af_light #light.philips_e27_s
      data_template:
        transition: 1

# ##################################
# Sasha - Auto Night Light Off in the morning
# ##################################
- alias: sasha_night_auto_off_morning
  initial_state: 'true'
  trigger:
    - platform: time_pattern
      minutes: '/1'
  condition:
    # - condition: template
    #   value_template: "{{state_attr('light.philips_e27_s','scene')|int == 4}}"
    # - condition: state
    #   entity_id: light.philips_e27_s
    #   state: 'on'
    - condition: numeric_state
      entity_id: sensor.0x04cf8cdf3c77271d_illuminance_lux
      above: 500
    - condition: template
      value_template: "{{ state_attr('light.0x00124b000a9e26af_light','brightness')|int < 10 }}" #"{{state_attr('light.philips_e27_s','scene')|int == 4}}"
    - condition: state
      entity_id: light.0x00124b000a9e26af_light #light.philips_e27_s
      state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.0x00124b000a9e26af_light #light.philips_e27_s
      data_template:
        transition: 1


# ##################################
# Sasha - Round LED Reset 
# ##################################
- alias: sasha_round_led_reset
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: light.round_led_s
      to: 'unavailable'
      for:
        minutes: 5
  # condition:
  #   - condition: state
  #     entity_id: binary_sensor.tod_day_long
  #     state: 'on'
  action:
    - service: script.turn_on
      entity_id: script.round_led_s_restart

# ##################################
# Sasha - Round LED status check
# ##################################
- alias: sasha_round_led_status_check
  initial_state: 'true'
  trigger:
    - platform: time
      at: '07:00:01'
  condition:
    - condition: state
      entity_id: light.round_led_s
      state: 'unavailable'
  action:
    - service: script.turn_on
      entity_id: script.round_led_s_restart
    - service: notify.telegram
      data_template:
        message: "\U0001f6a8 Round LED S restart done(morning)!"
        
        
# ##################################
# Sasha - Timer restart with movement
# ################################## 
- alias: sasha_timer_restart
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: binary_sensor.0x00158d000224f89f_occupancy, binary_sensor.0x00158d0003140824_occupancy
      from: 'off'
      to: 'on'
  condition:
    - condition: state
      entity_id: light.round_led_s
      state: 'on'
  action:
    - service: timer.cancel
      entity_id: timer.main_light_s
    - service: timer.start
      entity_id: timer.main_light_s

# ##################################
# Sasha - Timer off
# ################################## 
- alias: sasha_timer_off
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: light.round_led_s
      to: 'off'
      from: 'on'
  action:
    - service: timer.cancel
      entity_id: timer.main_light_s
#    - service: automation.turn_off
#      entity_id: automation.sasha_auto_light_on
#    - delay: '00:00:10'
#    - service: automation.turn_on
#      entity_id: automation.sasha_auto_light_on
    
# ##################################
# Sasha - Timer start on light on
# ################################## 
- alias: sasha_timer_on
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: light.round_led_s
      to: 'on'
      from: 'off'
  action:
    #- service: automation.turn_on
    #  entity_id: automation.sasha_auto_light_on
    - service: timer.cancel
      entity_id: timer.main_light_s
    - service: timer.start
      entity_id: timer.main_light_s

# ##################################
# Sasha - Auto Light Off
# ##################################
- alias: sasha_auto_light_off
  initial_state: 'true'
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.main_light_s
  condition:
    - condition: state
      entity_id: binary_sensor.tod_day
      state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.round_led_s

# ##################################
# Sasha - Auto Light On
# ##################################
# - alias: sasha_auto_light_on
#   initial_state: 'true'
#   trigger:
#     - platform: event
#       event_type: xiaomi_aqara.motion
#       event_data:
#         entity_id: binary_sensor.motion_sensor_158d000224f89f
#   condition:
#     condition: and
#     conditions:
#       - condition: state
#         entity_id: light.round_led_s
#         state: 'off'
#       - condition: state
#         entity_id: binary_sensor.tod_day
#         state: 'on'
#       - condition: state
#         entity_id: sun.sun
#         state: below_horizon
#   action:
#     - service: light.turn_on
#       entity_id: light.round_led_s
      
# ##################################
# Sasha - Auto Ambilight On
# ##################################
# - alias: sasha_auto_ambilight_light
#   initial_state: 'true'
#   trigger:
#     - platform: state
#       entity_id: light.round_led_s
#   action:
#     - service: script.turn_on
#       data_template:
#         entity_id: script.sasha_ambilight_{{ states('light.round_led_s') | lower }}

# ##################################
# Sasha - LED Strip Control with Keypad
# ##################################
- alias: sasha_led_strip_control
  initial_state: 'false'
  trigger:
    - platform: state
      entity_id: 
        - binary_sensor.keypad_k_btn_01
        - binary_sensor.keypad_k_btn_02
        - binary_sensor.keypad_k_btn_03
        - binary_sensor.keypad_k_btn_04
        - binary_sensor.keypad_k_btn_05
        - binary_sensor.keypad_k_btn_06
        - binary_sensor.keypad_k_btn_07
        - binary_sensor.keypad_k_btn_08
        - binary_sensor.keypad_k_btn_09
        - binary_sensor.keypad_k_btn_10
        - binary_sensor.keypad_k_btn_11
  condition:
    - condition: template
      value_template: "{{not trigger.from_state.state in ['unavailable', 'unknown', 'none']}}"
    - condition: template
      value_template: "{{not trigger.to_state.state in ['unavailable', 'unknown', 'none']}}"
  action:
    - service_template: >
        {% if is_state('light.d1mini_co2_s_led','on')  and trigger.to_state.name == states('input_text.led_strip_s_last') %}
          script.led_strip_off
        {% else %}
          script.led_strip_on
        {% endif %}
      data_template:
        strip_name: light.d1mini_co2_s_led
        effect_name: >
          {% if trigger.to_state.name == 'Keypad_K_btn_01' %}
            none
          {% elif trigger.to_state.name == 'Keypad_K_btn_02' %}
            random
          {% elif trigger.to_state.name == 'Keypad_K_btn_03' %}
            strobe
          {% elif trigger.to_state.name == 'Keypad_K_btn_04' %}
            flicker
          {% elif trigger.to_state.name == 'Keypad_K_btn_05' %}
            rainbow
          {% elif trigger.to_state.name == 'Keypad_K_btn_06' %}
            color wipe
          {% elif trigger.to_state.name == 'Keypad_K_btn_07' %}
            scan
          {% elif trigger.to_state.name == 'Keypad_K_btn_08' %}
            twinkle
          {% elif trigger.to_state.name == 'Keypad_K_btn_09' %}
            random twinkle
          {% elif trigger.to_state.name == 'Keypad_K_btn_10' %}
            fireworks
          {% elif trigger.to_state.name == 'Keypad_K_btn_11' %}
            adressable flicker
          {% endif %}
    - service: input_text.set_value
      data_template:
        entity_id: input_text.led_strip_s_last
        value: "{{ trigger.to_state.name }}"
        

# ##################################
# Sasha - LED Strip Control with round key
# ##################################
- alias: sasha_led_strip_on
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.0x00158d00019c8afd_click
      to: 'single'
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.d1mini_co2_s_led
        effect: '{{ (["Random", "Rainbow", "Color Wipe", "Scan", "Twinkle", "Random Twinkle"] | random) }}'

# ##################################
# Sasha - LED Strip Control Color Swipe with round key
# ##################################
- alias: sasha_led_strip_on
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.0x00158d00019c8afd_click
      to: 'double'
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.d1mini_co2_s_led
        effect: 'Color Wipe'
        
# ##################################
# Sasha - LED Strip Control off with round key
# ##################################
- alias: sasha_led_strip_off
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.0x00158d00019c8afd_click
      to: 'long'
  action:
    - service: light.turn_off
      entity_id: light.d1mini_co2_s_led