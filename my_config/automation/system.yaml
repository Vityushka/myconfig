# #####################################################################################
#
# SYSTEM TASKS
#
# #####################################################################################

# ##################################
# System - Adguard state
# ##################################
#- alias: system_adguard_state
#  initial_state: 'off'
#  trigger:
#    - platform: state
#      entity_id: binary_sensor.adguard_protection
#    - platform: state
#      entity_id: binary_sensor.adguard_runnig
#  action:
#    - service: notify.telegram
#      data_template:
#        message: "AdGuard state - {{states.binary_sensor.adguard_runnig.state | upper}}, protection - {{states.binary_sensor.adguard_protection.state | upper}}!"

# ##################################
# System - Window Cam Snapshot on Motion
# ##################################
- alias: system_window_snapshot
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.unifi_motion_window
    from: 'off'
    to: 'on'
  action:
    - delay: '00:00:01'
    - service: camera.snapshot
      data:
        entity_id: camera.uvc_g3_flex_window
        filename: "/config/www/cam_captures/window.jpg"
    - delay: '00:00:01'
    - service: notify.telegram_cam
      data:
        title: "{{states('sensor.time')}} {{states('sensor.date')}}"
        message: "{{states('sensor.time')}} {{states('sensor.date')}}"
        data:
          photo:
          - file: "/config/www/cam_captures/window.jpg"
            caption: "{{states('sensor.time')}} {{states('sensor.date')}}"

# ##################################
# System - Errors counter
# ##################################
- alias: system_error_counter
  initial_state: 'on'
  trigger:
    platform: event
    event_type: system_log_event
    event_data:
        level: ERROR
  action:
    - service: counter.increment
      entity_id: counter.error_counter

# ##################################
# System - Warning counter
# ##################################
- alias: system_warning_counter
  initial_state: 'on'
  trigger:
    platform: event
    event_type: system_log_event
    event_data:
      level: WARNING
  action:
    service: counter.increment
    entity_id: counter.warning_counter

# ##################################
# System - START message
# ##################################
- alias: system_start_message
  initial_state: 'on'
  trigger:
    platform: homeassistant
    event: start
  action:
    - service: notify.telegram
      data_template:
        message: "\U0001F603 Сервер запущен!"
    - service: script.turn_on
      entity_id: script.system_start
    - service: counter.increment
      entity_id: counter.restart_counter
    
# ##################################
# System - STOP message
# ##################################
- alias: system_stop_message
  initial_state: 'on'
  trigger:
    platform: event
    event_type: homeassistant_stop
  action:
    - service: notify.telegram
      data_template:
        message: "\U0001F621 Сервер остановлен!"
        
# ##################################
# System - Radio Volume
# ##################################
- alias: system_set_radio_volume
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_number.volume_radio
  action:
    service: media_player.volume_set
    data_template:
      entity_id: >
        {% if is_state("input_select.chromecast_radio", "Kitchen GHM") %} media_player.home_mini_k
        {% elif is_state("input_select.chromecast_radio", "Vova's room GHM") %} media_player.home_mini_v
        {% elif is_state("input_select.chromecast_radio", "Sasha's room GHM") %} media_player.home_mini_s
        {% elif is_state("input_select.chromecast_radio", "Master Bedroom GHM ") %} media_player.home_mini_mb
        {% elif is_state("input_select.chromecast_radio", "Hall big") %} media_player.mpd
        {% elif is_state("input_select.chromecast_radio", "Hall big GHM") %} media_player.home_mini_hb
        {% elif is_state("input_select.chromecast_radio", "Everywhere") %} media_player.all_speakers
        {% endif %}
      volume_level: "{{ states('input_number.volume_radio') }}"

# ##################################
# System - Hass.io NEW Device
# ##################################
- alias: system_new_device_found
  initial_state: 'on'
  trigger:
    platform: event
    event_type:  device_tracker_new_device
  action:
    - service: notify.telegram
      data_template: 
        message: "\U00002734 Новое устройство: {{ trigger.event.data.host_name if trigger.event.data.host_name is defined else 'NA' }} - ({{ trigger.event.data.entity_id if trigger.event.data.entity_id is defined else 'NA' }})"

# ##################################
# System - Hass.io NEW Version
# ##################################
- alias: system_hassio_new_version
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.updater
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: binary_sensor.update_available 
      from: 'off'
      to: 'on'
  action:
    service: notify.telegram
    data_template: 
      message: "\U00002733 Hass.io {{states('sensor.ha_latest_version')}} доступен!"

# ##################################
# System - NEW DAY
# ##################################
- alias: system_new_day_telegram
  initial_state: 'on'
  trigger:
    - platform: time
      at: '00:00:02'
  action:
    - service: notify.telegram
      data_template:
        message: "\U0001F305 Начался новый день! За прошедшие сутки перезагрузок - {{states('counter.restart_counter')|int }}, ошибок - {{states('counter.error_counter')|int }}, предупреждений - {{states('counter.warning_counter')|int}}, ошибок входа - {{states('counter.badlogin_counter')|int}}. Входная дверь открывалась - {{states('counter.main_door_hb')|int}}раз(а)."
    - service: counter.reset
      entity_id: counter.warning_counter, counter.error_counter, counter.restart_counter, counter.badlogin_counter, counter.main_door_hb
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.weather_announcement_flag

# ##################################
# System - Weather FCST to Telegram
# ##################################
- alias: system_weather_to_telegram
  initial_state: 'on'
  trigger:
    - platform: time
      at: '07:00:00'
    #- platform: time
    #  at: '17:00:00'
    - platform: time
      at: '21:00:00'
  action:
  - service: script.turn_on
    entity_id: script.weather_telegram

# ##################################
# System - Dima At home
# ##################################
- alias: system_presence_dima_at_home
  initial_state: 'on'
  trigger:
    - platform: state
      #entity_id: device_tracker.life360_dima_tsymbal
      entity_id: person.dima
      to: 'home'
      for:
        minutes: 3
  action: 
    - service: notify.telegram
      data_template:
        message: "\U0001F9D4 Дима дома!"
        
# ##################################
# System - Vova At home
# ##################################
- alias: system_presence_vova_at_home
  initial_state: 'on'
  trigger:
    - platform: state
      #entity_id: device_tracker.life360_vova_tsymbal
      entity_id: person.vova
      to: 'home'
      for:
        minutes: 3
  action: 
    - service: notify.telegram
      data_template:
        message: "\U0001F471 Вова дома!"

# ##################################
# System - Sandra At home
# ##################################
- alias: system_presence_sandra_at_home
  initial_state: 'on'
  trigger:
    - platform: state
      #entity_id: device_tracker.life360_sandra_tsymbal
      entity_id: person.sandra
      to: 'home'
      for:
        minutes: 3
  action: 
    - service: notify.telegram
      data_template:
        message: "\U0001F467 Саша дома!"

# ##################################
# System - Sasha At home
# ##################################
#- alias: system_presence_sasha_at_home
#  initial_state: 'on'
#  trigger:
#    - platform: state
#      #entity_id: device_tracker.life360_sandra_tsymbal
#      entity_id: person.sasha
#      to: "home"
#  action: 
#    - service: notify.telegram
#      data_template:
#        message: "\U0001F467 Санек дома!"


# ##################################
# System - login failure message
# ##################################
- alias: system_login_failure
  initial_state: 'on'
  hide_entity: false
  trigger:
    - platform: state
      entity_id: persistent_notification.http_login
  condition:
    - condition: template
      value_template: "{{ trigger.to_state.state != off }}"
  action:
    - service: counter.increment
      entity_id: counter.badlogin_counter
    - service: notify.telegram
      data_template:
        message: "\U0000274C Неудачная попытка подлючения. Неверно введен пароль! {{ state_attr('persistent_notification.http_login','message') }}"
    - service: persistent_notification.dismiss
      data:
        notification_id: http_login

# ##################################
# System - Sasha tracker - Toggle
# ##################################
- alias: system_sasha_tracker_toggle
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_158d0002fa99a8
        click_type: single
  action:
    - service: input_boolean.toggle
      entity_id: input_boolean.sasha_tracker

# ##################################
# System - Sasha tracker
# ##################################
- alias: system_sasha_tracker
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_boolean.sasha_tracker
  action:
    - service: notify.telegram
      data_template:
        message: "\U0001F476 Sasha Tracker {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}"
    - service: device_tracker.see
      data_template:
        dev_id: sasha
        location_name: "{% if is_state('input_boolean.sasha_tracker','on')%}home{%else%}not_home{%endif%}"

# ##################################
# System - Sasha tracker - Audio
# ##################################
- alias: system_sasha_audio_tts
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.sasha_tracker
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: binary_sensor.tod_day
        state: 'on'
      # - condition: template
      #   value_template: "{{(now()|as_timestamp - states.binary_sensor.switch_158d0002fa99a8.last_updated|as_timestamp ) > 15}}"
  action:
    - service: script.turn_on
      entity_id: script.entrance_snapshot_sasha
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.mpd
        volume_level: '0.3'
    - service: tts.yandextts_say
      entity_id: media_player.mpd
      data_template:
        message: >
          {% set name1 = ['С+аша, ','Сан+ёк, ','Алекс+андр, ','М+итрич, ','Алекс+андр Дм+итриевич, ', 'М+аленький хоз+яин, '] | random %}
          {% set greet2  = ['пок+а!','до свид+ания!','до встр+ечи!','чава-как+ава!','всег+о хор+ошего!', 'я б+уду скуч+ать!'] | random %}
          {% set greet1 = ['прив+ет!','здар+ова!','здр+авствуй!','здр+авия жел+аю!','сал+ют!',' Ур+а! Ур+а! Ты верн+улся дом+ой!'] | random %}
          
          {{name1}} {% if is_state('input_boolean.sasha_tracker','on')%}{{greet1}}{%else%}{{greet2}}{%endif%}
    - service: notify.telegram
      data_template:
        message: "Фотография"
        data:
          photo:
            - file: /config/www/cam_captures/entrance-sasha.jpg
              caption: "\U0001F476 Санек {%if is_state('input_boolean.sasha_tracker','on')%}дома{%else%}уходит{%endif%}!"

    # - service: notify.telegram
    #   data:
    #     title: "Вход"
    #     message: "Фотография"
    #     data:
    #       photo:
    #       - file: /config/www/cam_captures/entrance.jpg
    #         caption: Вход


# ##################################
# System - Sensors Low Battery Notification
# ##################################
- alias: system_low_battery
  initial_state: 'on'
  trigger:
    platform: numeric_state
    value_template: '{{ state.attributes.battery_level }}'
    below: 9
    above: 11
    entity_id:
      # HALL BIG
      - binary_sensor.switch_158d0002fa99a8
      - binary_sensor.door_window_sensor_158d000253722b
      - binary_sensor.door_window_sensor_158d000252acba
      - sensor.temperature_158d0002461e5b
      - sensor.temperature_158d0002464ec0
      - binary_sensor.motion_sensor_158d0001d5995e
      - binary_sensor.door_window_sensor_158d0001e5d6be
      - binary_sensor.door_window_sensor_158d0002531749
      - binary_sensor.motion_sensor_158d0001e05856
      - binary_sensor.motion_sensor_158d0002b482e9
      - binary_sensor.switch_158d00023d3206
      - binary_sensor.vibration_158d0002a2412d
      - sensor.humidity_158d000237167c
      - binary_sensor.door_window_sensor_158d0002a1a4b2
      - binary_sensor.door_window_sensor_158d0002b7c2c8
      # HALL SMALL
      - binary_sensor.motion_sensor_158d0001ae9f61
      - binary_sensor.wall_switch_right_158d00026ea94e
      - binary_sensor.motion_sensor_158d0002b48381
      # KITCHEN
      - binary_sensor.door_window_sensor_158d00025371f6
      - binary_sensor.water_leak_sensor_158d00023297e7
      - sensor.temperature_158d0001e586af
      - binary_sensor.motion_sensor_158d0002b4729d
      - binary_sensor.switch_158d0001ef61be
      - binary_sensor.switch_158d0001ef609b
      - binary_sensor.switch_158d00023e5f2a
      - switch.wall_switch_right_158d0002a365df
      - binary_sensor.door_window_sensor_158d0002a1a47a
      # MASTER BEDROOM
      - binary_sensor.door_window_sensor_158d000200ad58
      - binary_sensor.door_window_sensor_158d00025315e9
      - binary_sensor.motion_sensor_158d0001e53cda
      - binary_sensor.wall_switch_both_158d00013e6aa5
      - sensor.temperature_158d000222c746
      - binary_sensor.switch_158d00023d3116
      - sensor.temperature_158d0001e8995a
      # VOVA
      - binary_sensor.door_window_sensor_158d00022ccffe
      - binary_sensor.door_window_sensor_158d0002529b9c
      - binary_sensor.motion_sensor_158d000236bb94
      - binary_sensor.switch_158d00016bdb4a
      - binary_sensor.wall_switch_both_158d0001712d55
      - sensor.temperature_158d0001e58714
      - binary_sensor.wall_switch_both_158d00026eb820
      - binary_sensor.door_window_sensor_158d000236fdc9
      # STORAGE
      - binary_sensor.motion_sensor_158d0001aea602
      - binary_sensor.switch_158d00023d0b86
      - sensor.temperature_158d000233fb72
      # BATHROOM
      - switch.plug_158d0001f9ebd8
      - binary_sensor.door_window_sensor_158d0002a14c5e
      - binary_sensor.motion_sensor_158d000236bc6d
      - binary_sensor.water_leak_sensor_158d0002373a67
      - sensor.temperature_158d00020d7c3a
      - binary_sensor.door_window_sensor_158d000236fcd5
      # TOILET
      - binary_sensor.door_window_sensor_158d0001ef2ffc
      - binary_sensor.motion_sensor_158d0001e54280
      - binary_sensor.switch_158d0001b97111
      - binary_sensor.water_leak_sensor_158d00023684c2
      - sensor.temperature_158d0001e58754
      - binary_sensor.door_window_sensor_158d000232ddd6
      - binary_sensor.door_window_sensor_158d000232de79
      # SASHA
      - binary_sensor.cube_158d000116b03f
      - binary_sensor.door_window_sensor_158d00025370d1
      - binary_sensor.door_window_sensor_158d00027129ae
      - binary_sensor.motion_sensor_158d000224f89f
      - binary_sensor.switch_158d00019c8afd
      - binary_sensor.switch_158d0001f3627d
      - binary_sensor.vibration_158d0002a8ac3c
      - sensor.temperature_158d0001e6d85a
  action:  
  - service: notify.telegram
    data_template:           
      message: "\U0001f6a8 Low battery level: {{ trigger.to_state.name }} - {{ trigger.to_state.attributes.battery_level }}%"

# ##################################      
# System - Tor restart every 2 hours
# ##################################
- alias: system_tor_restart
  initial_state: 'off'
  trigger:
    platform: time_pattern
    hours: '/2'
  action:
    - service: hassio.addon_restart
      data:
        addon: "a0d7b954_tor"
        
# ##################################
# System - Home weather (ya)
# ##################################
- alias: system_weather_home
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: sensor.ya_weather_home
  condition:
      - condition: state
        entity_id: binary_sensor.tod_day
        state: 'on'
  action:
    - service: notify.telegram_family
      data_template:
        message: "\U00002602 Погода дома: {{states('sensor.ya_weather_home')}}"

# # ##################################
# # System - Outside motion
# # ##################################
# - alias: system_motion_outside
#   initial_state: 'on'
#   trigger:
#     - platform: state
#       entity_id: sensor.doorcam_email_unread
#   action:
#     - service: input_boolean.turn_on
#       data:
#         entity_id: input_boolean.motion_out
#     - delay: '00:00:05'
#     - service: input_boolean.turn_off
#       data:
#         entity_id: input_boolean.motion_out

# ##################################
# System - Person State
# ##################################
#- alias: system_person_state
#  initial_state: 'on'
#  trigger:
#    - platform: state
#      entity_id: person.dima
#    - platform: state
#      entity_id: person.sandra
#    - platform: state
#      entity_id: person.vova
#    - platform: state
#      entity_id: person.sasha
#  condition:
#    - condition: template
#      value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
   # condition: and
  #  conditions:
 #   
  #    
      #- condition: template
      #  value_template: "{{ not is_state('trigger.from_state.state','not_home') }}"
      #- condition: template
      #  value_template: "{{ not is_state('trigger.to_state.state','not_home') }}"
#  action:
#    - service: notify.telegram
#      data_template:
#        message: "{%if trigger.from_state.attributes.friendly_name =='Dima'%}\U0001F9D4 Дима: {%elif trigger.from_state.attributes.friendly_name =='Sandra'%}\U0001F467 Саша: {%elif trigger.from_state.attributes.friendly_name =='Vova'%}\U0001F471 Вова: {%elif trigger.from_state.attributes.friendly_name =='Sasha'%}\U0001F476 Санек: {%endif%} {{ trigger.to_state.state|capitalize }}"
#        {{ trigger.from_state.state|capitalize }} ->

# ##################################
# System - Database Purge
# ##################################
- alias: system_database_purge
  initial_state: 'on'
  trigger:
    - platform: time
      at: '02:00:00'
  action:
    - service: recorder.purge
      data:
        keep_days: 2
        repack: true
    - service: notify.telegram
      data_template:
        message: "\U0001f4ab Database Purge"
        

# ##################################
# System - Entities update
# ##################################
- alias: system_entities_update
  initial_state: 'off'
  trigger:
      - platform: time_pattern
        minutes: '/30'
  action:
    - service: homeassistant.update_entity
      entity_id: sensor.nonsmoker
      
# ##################################
# System - Critical WiFi Devices state
# ##################################
- alias: system_critical_wifi_devices_state
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: 
        - light.square_led_v
        - light.round_led_mb
        - light.round_led_s
        - light.led_strip_hb
        - light.bedside_mb
        - fan.humidifier2
        - switch.sonoff_basic_1_relay
      to: 'unavailable'
    - platform: state
      entity_id: 
        - light.square_led_v
        - light.round_led_mb
        - light.round_led_s
        - light.led_strip_hb
        - light.bedside_mb
        - fan.humidifier2
        - switch.sonoff_basic_1_relay
      from: 'unavailable'
  action:
    - service: notify.telegram
      data_template:
        message: "{%if is_state(trigger.entity_id, 'unavailable') %}\U0000274C{%else%}\U00002705{%endif%}{{trigger.from_state.attributes.friendly_name}}: {{trigger.from_state.state}} -> {{trigger.to_state.state}}"

# ##################################
# System - Non-Critical WiFi Devices state
# ##################################
- alias: system_noncritical_wifi_devices_state
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: 
        - light.led_color_v
        - light.led_color_k
        - light.philips_e27_s
        - light.philips_e27_v
        - fan.purifier2s
      to: 'unavailable'
      for:
        minutes: 05
#    - platform: state
#      entity_id: 
#        - light.led_color_v
#        - light.led_color_k
#        - light.philips_e27_s
#        - light.philips_e27_v
#        - fan.purifier2s
#      from: 'unavailable'
  action:
    - service: notify.telegram
      data_template:
        message: "{%if is_state(trigger.entity_id, 'unavailable') %}\U0000274C{%else%}\U00002705{%endif%}{{trigger.from_state.attributes.friendly_name}}: {{trigger.from_state.state}} -> {{trigger.to_state.state}}"


# # ##################################
# # System - Tnsor Flow Scan
# # ##################################
# - alias: system_tensorflow_scan
#   initial_state: 'off'
#   trigger:
#     - platform: state
#       entity_id:
#         - sun.sun
#   action:
#     - service: image_processing.scan
#       entity_id: 
#         - camera.uvc_g3_flex_window
#     - service: image_processing.scan
#       entity_id: 
#         - camera.uvc_g3_flex_entrance
#     - service: image_processing.scan
#       entity_id: 
#         - camera.uvc_g3_flex_dixy
#     - service: image_processing.scan
#       entity_id: 
#         - camera.uvc_g3_flex_hall
#     - service: image_processing.scan
#       entity_id: 
#         - camera.digma100
#     - service: image_processing.scan
#       entity_id: 
#         - camera.door_hb
        
# # ##################################
# # System - Tnsor Flow Scan File
# # ##################################
# - alias: system_tensorflow_scan_file
#   initial_state: 'on'
#   trigger:
#     - platform: state
#       entity_id:
#         - binary_sensor.driveway
#   action:
#     - service: image_processing.scan
#       entity_id: 
#         - camera.local_file
        
# ##################################
# System - Tod update
# ##################################
- alias: system_tod_update
  initial_state: 'off'
  trigger:
#    - platform: time_pattern
#      minutes: "/10"
    - platform: time_pattern
      minutes: 0
    - platform: time_pattern
      minutes: 1
    - platform: time_pattern
      minutes: 15
    - platform: time_pattern
      minutes: 30
    - platform: time_pattern
      minutes: 45
    - platform: time_pattern
      minutes: 59
  action:
    - service: homeassistant.update_entity
      entity_id: 
        - binary_sensor.tod_night
        - binary_sensor.tod_early_night
        - binary_sensor.tod_morning
        - binary_sensor.tod_day
        - binary_sensor.tod_evening 
        - binary_sensor.tod_day_long
        - binary_sensor.tariff_t1 
        - binary_sensor.tariff_t2
        - binary_sensor.tod_full_day
        - binary_sensor.tod_full_night
        
# ##################################
# System - Gateway PLugs turn on
# ##################################
- alias: system_gateway_plugs_restore
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: 
      - switch.gateway_plug_hb
      - switch.gateway_plug_hs
      - switch.gateway_plug_k
      - switch.gateway_plug_s
      - switch.gateway_plug_v
      - switch.gateway_plug_mb
    to: 'off'
    for:
      seconds: 15
  action:
    - service: switch.turn_on
      entity_id: 
      - switch.gateway_plug_hb
      - switch.gateway_plug_hs
      - switch.gateway_plug_k
      - switch.gateway_plug_s
      - switch.gateway_plug_v
      - switch.gateway_plug_mb

# ##################################
# System - Transmission completed Torrent
# ##################################
- alias: system_transmission_completed_torrent
  initial_state: 'on'
  trigger:
    platform: event
    event_type: transmission_downloaded_torrent
  action:
    service: notify.telegram
    data_template:
      #title: "Torrent completed!"
      message: "\U0001F4AF Загрузка завершена {{trigger.event.data.name}}"

# ##################################
# System - Telegram message on Config error
# ##################################
- alias: system_config_error_notification
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: persistent_notification.homeassistant_check_config
  action:
    - service: notify.telegram
      data_template:
        message: "{{ '\U0000274C' }} Перезапуск отменён. Конфигурация содержит ошибки."
    - service: persistent_notification.dismiss
      data:
        notification_id: homeassistant_check_config
        
# ##################################
# System - TOD check
# ##################################
- alias: system_tod_check
  initial_state: 'on'
  trigger:
    - platform: time_pattern
      minutes: "/5"
    - platform: state
      entity_id: binary_sensor.tod_day
    - platform: state
      entity_id: binary_sensor.tod_night
  condition:
    condition: or
    conditions:
      - condition: template
        value_template: "{{ is_state('binary_sensor.tod_day','off') and ((now().hour | int) >= 7 and (now().hour | int) < 21 ) }}"
      - condition: template
        value_template: "{{ is_state('binary_sensor.tod_day','on') and ((now().hour | int) >= 21 or (now().hour | int) < 7 ) }}"
      - condition: template
        value_template: "{{ is_state('binary_sensor.tod_night','off') and ((now().hour | int) >= 21 or (now().hour | int) < 7 ) }}"
      - condition: template
        value_template: "{{ is_state('binary_sensor.tod_night','on') and ((now().hour | int) >= 7 and (now().hour | int) < 21 ) }}"
  action:
    - service: notify.telegram
      data_template:
        message: >
          {% if (is_state('binary_sensor.tod_day','off') and ((now().hour | int) >= 7 and (now().hour | int) < 21 )) or (is_state('binary_sensor.tod_day','on') and ((now().hour | int) >= 21 or (now().hour | int) < 7 )) %} {{'\U000023f2'}} Внимание! Не верный TOD Day! (state {{states('binary_sensor.tod_day') }})"
          {% elif (is_state('binary_sensor.tod_night','off') and ((now().hour | int) >= 21 or (now().hour | int) < 7 )) or (is_state('binary_sensor.tod_night','on') and ((now().hour | int) >= 7 and (now().hour | int) < 21 )) %} {{'\U000023f2'}} Внимание! Не верный TOD Night! (state {{states('binary_sensor.tod_night') }})"
          {%endif%}
    - service: homeassistant.update_entity
      entity_id:
        - binary_sensor.tod_day
        - binary_sensor.tod_night
    - service: notify.telegram
      data_template:
        message: >
          {% if 
          (is_state('binary_sensor.tod_day','on') and ((now().hour | int) >= 7 and (now().hour | int) < 21 ))
          or (is_state('binary_sensor.tod_day','off') and ((now().hour | int) >= 21 or (now().hour | int) < 7 )) 
          and (is_state('binary_sensor.tod_night','on') and ((now().hour | int) >= 21 or (now().hour | int) < 7 ))
          or (is_state('binary_sensor.tod_night','off') and ((now().hour | int) >= 7 and (now().hour | int) < 21 )) %} {{'\U000023f2'}} Исправлено!  (day {{states('binary_sensor.tod_day') }} \ night {{states('binary_sensor.tod_night') }} )"
          {%else%} {{'\U000023f2'}} Не исправлено!  (day {{states('binary_sensor.tod_day') }} \ night {{states('binary_sensor.tod_night') }} )"
          {%endif%}