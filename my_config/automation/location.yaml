# ##################################
# Location - Back to home Bus Notification
# ################################## 
- alias: location_back_to_home
  initial_state: 'on'
  trigger:
    platform: zone
    entity_id: device_tracker.life360_dima_tsymbal
    zone: zone.sobolstation
    # Event is either enter or leave
    event: enter # or "leave"
  condition:
    condition: and
    conditions:
      - condition: time
        after: '13:00:00'
      - condition: numeric_state
        entity_id: sensor.bus_to_home_min
        above: -1
  action:
    service: notify.telegram
    data_template:
      message: "\U0001f68c Next bus in {{states('sensor.bus_to_home_min')}}min."




# ##################################
# System - Dima Location changing
# ################################## 
#- alias: system_location_dima
#  initial_state: 'on'
#  trigger:
#    platform: state
#    entity_id: person.dima
#  action:
#    service: notify.telegram_errors
#    data_template:
#      message: 'Dima: {{ now().strftime("%d.%m.%Y-%H%M%S") }} from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}'
        
# ##################################
# System - Sandra Location changing
# ################################## 
#- alias: location_sandra
#  initial_state: 'off'
#  trigger:
#    platform: state
#    entity_id: person.sandra
#  action:
#    service: notify.telegram_errors
#    data_template:
#      message: 'Sandra: {{ now().strftime("%d.%m.%Y-%H%M%S") }} from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}'
        
# ##################################
# System - Vova Location changing
# ################################## 
#- alias: location_vova
#  initial_state: 'off'
#  trigger:
#    platform: state
#    entity_id: person.vova
#  action:
#    service: notify.telegram_errors
#    data_template:
#      message: 'Vova: {{ now().strftime("%d.%m.%Y-%H%M%S") }} from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}'
        
# ##################################
# System - Sasha Location changing
# ################################## 
#- alias: location_sasha
#  initial_state: 'off'
#  trigger:
#    platform: state
#    entity_id: person.sasha
#  action:
#    service: notify.telegram_errors
#    data_template:
#      message: 'Sasha: {{ now().strftime("%d.%m.%Y-%H%M%S") }} from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}'