# #####################################################################################
#
# Zigbee2MQTT
#
# #####################################################################################
# Z2M - Log Level
# ##################################
- alias: zigbee2mqtt_log_level
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: input_select.zigbee2mqtt_log_level
  action:
    - service: mqtt.publish
      data:
        payload_template: "{{ states('input_select.zigbee2mqtt_log_level') }}"
        topic: zigbee2mqtt/bridge/config/log_level

# ##################################
# Z2M - Automation to start timer when enable join is turned on
# ##################################
- alias: zigbee2mqtt_join_enable
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: switch.zigbee2mqtt_main_join
      to: "on"
  action:
    - service: timer.start
      entity_id: timer.zigbee_permit_join

# ##################################
# Z2M - Automation to stop timer when switch turned off and turn off switch when timer finished
# ##################################
- alias: zigbee2mqtt_join_disabled
  initial_state: 'true'
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.zigbee_permit_join
    - platform: state
      entity_id: switch.zigbee2mqtt_main_join
      to: "off"
  action:
    - service: timer.cancel
      data:
        entity_id: timer.zigbee_permit_join
    - service: switch.turn_off
      entity_id: switch.zigbee2mqtt_main_join

# ##################################
# Z2M - Successfull Interview
# ##################################
- alias: zigbee2mqtt_notify_successfull_interview
  initial_state: 'true'
  trigger:
    - platform: mqtt
      topic: 'zigbee2mqtt/bridge/log'
  condition:
    - condition: template
      value_template: '{{trigger.payload_json.type == "pairing" and trigger.payload_json.message == "interview_successful"}}'
  action:
    - service: persistent_notification.create
      data_template:
        title: Device joined the zigbee2mqtt network
        message: "Name: {{trigger.payload_json.meta.friendly_name}},
                  Vendor: {{trigger.payload_json.meta.vendor}},
                  Description: {{trigger.payload_json.meta.description}}"
    - service: notify.telegram
      data_template:
        message: "\U00002733 Z2M new device - Name: {{trigger.payload_json.meta.friendly_name}}, Vendor: {{trigger.payload_json.meta.vendor}}, Description: {{trigger.payload_json.meta.description}}"

                  

# ##################################
# Z2M -  Zigbee2Mqtt bridge issue
# ##################################
- alias: zigbee2mqtt_z2m_bridge_status
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.zigbee2mqtt_bridge_state
  action:
    - service: notify.telegram
      data_template:
        message: >
          {%if is_state('sensor.zigbee2mqtt_bridge_state','online')%}{{"\U00002705"}} Z2M онлайн!
          {%elif is_state('sensor.zigbee2mqtt_bridge_state','offline') and is_state('sensor.zigbee2mqtt_addon_restart','ON')%}{{"\U0000267b"}} Внимание! Z2M рестарт аддона!
          {%else%}{{"\U0000274C"}} Внимание! Z2M Отказ!
          {%endif%}

# ##################################
# Z2M -  Zigbee2Mqtt not running
# ##################################
- alias: zigbee2mqtt_z2m_addon_status
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.zigbee2mqtt_addon
  # condition:
  #   - condition: template
  #     value_template: "{{ not is_state('sensor.zigbee2mqtt_addon','started') }}"
  action:
    - service: notify.telegram
      data_template:
        message: "\U0001f31f Внимание! Z2M: {{trigger.from_state.state}} -> {{trigger.to_state.state}} !"

# ##################################
# Z2M -  Zigbee2Mqtt Update
# ##################################
- alias: zigbee2mqtt_z2m_addon_update
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.zigbee2mqtt_addon
  condition:
    - condition: template
      value_template: "{{ state_attr('sensor.zigbee2mqtt_addon', 'version') != state_attr('sensor.zigbee2mqtt_addon', 'version_latest') }} }}"
  action:
    - service: notify.telegram
      data_template:
        message: "\U0001f31f Внимание! Z2M {{state_attr('sensor.zigbee2mqtt_addon', 'version_latest')}} обновление доступно! !"

        
#{{ state_attr('sensor.supervisor_updates', 'current_version') != state_attr('sensor.supervisor_updates', 'newest_version') }}
        
# ##################################
# Z2M -  MQTT offline
# ##################################
- alias: zigbee2mqtt_mqtt_status
  initial_state: 'true'
  trigger:
    - platform: time_pattern
      minutes: "/1"
  condition:
    - condition: template
      value_template: "{{ states('sensor.mqtt_broker_uptime')|int(-9999) == (-9999) }}"
  action:
    - service: notify.telegram
      data_template:
        message: "\U0001f31f Внимание! MQTT брокер не запущен!"


- alias: zigbee2mqtt_test
  initial_state: 'false'
  trigger:
    - platform: mqtt
      topic: 'zigbee2mqtt/#'
  condition:
    - condition: template
      value_template: '{{ trigger.payload_json.availability == "offline" }}'
  action:
    - service: notify.telegram
      data_template:
        message: "{{trigger.payload_json}}"