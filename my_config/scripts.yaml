  security_mode_toggle:
    alias: Security mode toggle
    sequence:
      - service_template: >
          homeassistant.turn_{%if is_state('input_boolean.security_mode','on') %}off{% else %}on{%endif%}
        entity_id: input_boolean.security_mode, automation.security_sensors_state_change
  
  ha_released_update:
    alias: HA Released version update from server
    sequence:
      service: homeassistant.update_entity
      entity_id: sensor.ha_latest_version

  error_reset:
    alias: Error Counter Reset
    sequence:
      - service: counter.reset
        entity_id: 
          - counter.error_counter

  warning_reset:
    alias: Warning Counter Reset
    sequence:
      - service: counter.reset
        entity_id: 
          - counter.warning_counter


  telegram_weather:
    alias: Weather Notify to Telegram
    sequence:
      - service: notify.telegram
        data_template:
          message: >
            {%- set date = as_timestamp(now()) -%}
            {% set weekday_list = ['Понедельник','Вторник','Среда','Четверг','Пятница','Суббота','Воскресенье'] %}
            {% set month_list = ['Января','Февраля','Марта','Апреля','Мая','Июня','Июля','Августа','Сентября','Октября','Ноября','Декабря'] %}

            {% set m_ok = date | timestamp_custom("%m") | int %}
            {% set wd_ok = date | timestamp_custom("%w") | int %}

            {% set weekday = weekday_list[wd_ok-1] %} 
            {% set month = month_list[m_ok-1] %} 
            {% set hour_num = now().hour | int %}
            
            {% if hour_num >=6 and hour_num <12 %}
              Доброе утро!
            {% elif hour_num>=12 and hour_num<17 %}
              Добрый день!
            {% elif hour_num>=17 and hour_num<22 %}
              Добрый вечер!
            {% else %}
              Доброй ночи!
            {% endif %}
            
            {%if hour_num < 17 and hour_num > 6 %}Сегодня {{ weekday }}, {{ now().day|int }} {{ month_list[now().month-1] }}.
            {{ states('sensor.dark_sky_summary_0d') }}
            Температура днем {{states('sensor.dark_sky_daytime_high_temperature_0d')|round(0)}} °C. 
            Вероятность осадков {{states('sensor.dark_sky_precip_probability_0d')|round(0)}} %. 
            {%if states('sensor.dark_sky_precip_probability_0d')|int > 0 %} Вид осадков - {% if states.sensor.dark_sky_precip_0d.state == "snow" %}снег{% elif states.sensor.dark_sky_precip_0d.state == "rain" %}дождь{% elif states.sensor.dark_sky_precip_0d.state == "sleet" %}снег с дождем{% else %}неизвестно{% endif %}.
            {% endif %}
            {% endif %}
            
            {%if hour_num >= 17 and hour_num <= 6 %}Краткий прогноз погоды на завтра - {{ states('sensor.dark_sky_summary_1d') }}
            Максимальная температура днем {{states('sensor.dark_sky_daytime_high_temperature_1d')|round(0)}} °C. 
            Вероятность осадков {{states('sensor.dark_sky_precip_probability_1d')|round(0)}} %.
            {%if states('sensor.dark_sky_precip_probability_1d')|int > 0 %} Вид осадков - {% if states.sensor.dark_sky_precip_1d.state == "snow" %}снег{% elif states.sensor.dark_sky_precip_1d.state == "rain" %}дождь{% elif states.sensor.dark_sky_precip_1d.state == "sleet" %}снег с дождем{% else %}неизвестно{% endif %}.
            {% endif %}
            {% endif %}


#{{(as_timestamp(now())+ (86400)) | timestamp_custom("%d",true)}}


  tts_weather:
    alias: Weather TTS to specified speakers
    sequence:
      - service: media_player.volume_set
        data_template:
          entity_id: "{{ entity_id }}"
          volume_level: "{{ volume_level }}"
      - service: tts.yandextts_say
        data_template:
          entity_id: "{{ entity_id }}"
          cache: false
          message: >
            {%- set date = as_timestamp(now()) -%}
            {% set weekday_list = ['Понедельник','Вторник','Среда','Четверг','Пятница','Суббота','Воскресенье'] %}
            {% set month_list = ['Января','Февраля','Марта','Апреля','Мая','Июня','Июля','Августа','Сентября','Октября','Ноября','Декабря'] %}
            {% set day_list = ['первое','второе','третье','четвертое','пятое','шестое','седьмое','восьмое','девятое','десятое','одиннадцатое','двенадцатое','тринадцатое','четырнадцатое','пятнадцатое','шестнадцатое','семнадцатое','восемнадцатое','девятнадцатое','двадцатое','двадцать первое','двадцать второе','двадцать третье','двадцать четвертое','двадцать пятое','двадцать шестое','двадцать седьмое','двадцать восьмое','двадцать девятое','тридцатое','тридцать первое'] %}
            
            {% set m_ok = date | timestamp_custom("%m") | int %}
            {% set wd_ok = date | timestamp_custom("%w") | int %}
            {% set d_ok = date | timestamp_custom("%d") | int %}
  
            {% set weekday = weekday_list[wd_ok-1] %} 
            {% set day = day_list[d_ok-1] %}
            {% set month = month_list[m_ok-1] %} 
            {% set hour_num = now().hour | int %}
            
            {% if hour_num >=6 and hour_num <12 %}
              Доброе утро!
            {% elif hour_num>=12 and hour_num<17 %}
              Добрый день!
            {% elif hour_num>=17 and hour_num<22 %}
              Добрый вечер!
            {% else %}
              Доброй ночи!
            {% endif %}
            
            Сегодня {{ weekday }} {{ day }} {{ month }}.
              {{ states('sensor.dark_sky_summary_0d') }}. 
              Температура днем {{states('sensor.dark_sky_daytime_high_temperature_0d')|round(0)}} °C. 
              Вероятность осадков {{states('sensor.dark_sky_precip_probability_0d')|round(0)}} %. 
              {%if states('sensor.dark_sky_precip_probability_0d')|int > 0 %} Вид осадков - 
                {% if states.sensor.dark_sky_precip_0d.state == "snow" %}
                  снег
                {% elif states.sensor.dark_sky_precip_0d.state == "rain" %}
                  дождь
                {% elif states.sensor.dark_sky_precip_0d.state == "sleet" %}
                  снег с дождем
                {% else %}
                  неизвестно
                {% endif %}
              {% endif %}
            

            {%if hour_num > 17 and hour_num < 6 %}
              Краткий прогноз погоды на завтра - {{ states('sensor.dark_sky_summary_1d') }}
              Максимальная температура днем {{states('sensor.dark_sky_daytime_high_temperature_1d')|round(0)}} °C. 
              Вероятность осадков {{states('sensor.dark_sky_precip_probability_1d')|round(0)}} %.
              {%if states('sensor.dark_sky_precip_probability_1d')|int > 0 %} Вид осадков - 
                {% if states.sensor.dark_sky_precip_1d.state == "snow" %}
                  снег
                {% elif states.sensor.dark_sky_precip_1d.state == "rain" %}
                  дождь
                {% elif states.sensor.dark_sky_precip_1d.state == "sleet" %}
                  снег с дождем
                {% else %}
                  неизвестно
                {% endif %}
            {% endif %}
            
            {% endif %}


  open_door_photo:
    alias: Open Door Photos
    sequence:
      - service: camera.snapshot
        data:
          entity_id: camera.uvc_g3_flex_entrance
          filename: "/config/www/cam_captures/entrance.jpg"
      - service: camera.snapshot
        data:
          entity_id: camera.digma100
          filename: "/config/www/cam_captures/entrance2.jpg"
      - delay: 00:00:06
      - service: camera.snapshot
        data:
          entity_id: camera.uvc_g3_flex_hall
          filename: "/config/www/cam_captures/hall.jpg" 
      - delay: 00:00:05
      - service: notify.telegram
        data:
          message: "Фото"
          data:
            photo:
            - file: /config/www/cam_captures/entrance2.jpg
              caption: Вход 2
            - file: /config/www/cam_captures/entrance.jpg
              caption: Вход 1
            - file: /config/www/cam_captures/hall.jpg
              caption: Коридор
  
  ha_backup:
    alias: Manual Backup with G-Drive upload
    sequence:
     - service: hassio.snapshot_full
       data_template:
         name: auto_snap_{{ now().strftime('%d.%m.%Y') }}
     - delay: 00:05:00
     - service: rest_command.google_backup 
     - delay: 00:05:00
     - service: mqtt.publish
       data_template:
         topic: "googlebackup/result"
         payload: "{{ states('sensor.google_backup_status')}}"
         retain: true
     
  system_start:
    alias: System start script
    sequence:
      - service_template: >
          script.toilet_timer_{{ states("switch.wall_switch_left_158d0002a36f7f") | lower }}
      - service_template: >
          script.toilet_fan_timer_{{ states("switch.plug_158d0001f54f91") | lower }}
      - service_template: >
          script.kitchen_timer_{{ states("switch.wall_switch_right_158d0002a36f7f") | lower }}
      - service_template: >
          script.bathroom_timer_{{ states("switch.wall_switch_right_158d0002a36e26") | lower }}
      - service_template: >
          script.bathroom_fan_timer_{{ states("switch.plug_158d0001f9ebd8") | lower }}
      - service_template: >
          script.hallbig_timer_{{ states("group.light_hb") | lower }}
      - service_template: >
          script.storage_timer_{{ states("switch.wall_switch_158d000248bf53") | lower }}
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.weather_announcement_flag
          
  square_lamp_to_30:
    alias: Square Lamp to 30
    sequence:
    - service: light.turn_on
      entity_id: light.square_led_v
      data_template:
         brightness: 74
         kelvin: 3000
  
  square_lamp_to_100:
    alias: Square Lamp to 100
    sequence:
    - service: light.turn_on
      entity_id: light.square_led_v
      data_template:
         brightness_pct: 100
         kelvin: 6500
         
  square_lamp_off:
    alias: Square Lamp turn Off
    sequence:
    - service: light.turn_off
      entity_id: light.square_led_v
  
  hallbig_timer_off:
    alias: Hall big timer off
    sequence:
    - service: timer.cancel
      entity_id: timer.timer_k
  
  hallbig_timer_on:
    alias: Hall big timer on
    sequence:
    - service: timer.cancel
      entity_id: timer.timer_hb
    - service: timer.start
      entity_id: timer.timer_hb
  
  toilet_fan_timer_off:
    alias: Toilet fan timer off
    sequence:
    - service: timer.cancel
      entity_id: timer.timer_fan_t
  
  toilet_fan_timer_on:
    alias: Toilet fan timer on
    sequence:
    - service: timer.cancel
      entity_id: timer.timer_fan_t
    - service: timer.start
      entity_id: timer.timer_fan_t

  bathroom_fan_timer_off:
    alias: Bathroom fan timer off
    sequence:
    - service: timer.cancel
      entity_id: timer.timer_fan_b
  
  bathroom_fan_timer_on:
    alias: Bathroom fan timer on
    sequence:
    - service: timer.cancel
      entity_id: timer.timer_fan_b
    - service: timer.start
      entity_id: timer.timer_fan_b

  kitchen_timer_off:
    alias: Kitchen timer off
    sequence:
    - service: timer.cancel
      entity_id: timer.timer_k
  
  kitchen_timer_on:
    alias: Kitchen timer on
    sequence:
    - service: timer.cancel
      entity_id: timer.timer_k
    - service: timer.start
      entity_id: timer.timer_k
  
  toilet_timer_off:
    alias: Toilet timer off
    sequence:
    - service: timer.cancel
      entity_id: timer.timer_t
  
  toilet_timer_on:
    alias: Toilet timer on
    sequence:
    - service: timer.cancel
      entity_id: timer.timer_t
    - service: timer.start
      entity_id: timer.timer_t
  
  bathroom_timer_off:
    alias: Toilet timer off
    sequence:
    - service: timer.cancel
      entity_id: timer.timer_b
  
  bathroom_timer_on:
    alias: Toilet timer on
    sequence:
    - service: timer.cancel
      entity_id: timer.timer_b
    - service: timer.start
      entity_id: timer.timer_b
  
  storage_timer_off:
    alias: Storage timer off
    sequence:
    - service: timer.cancel
      entity_id: timer.timer_st
  
  storage_timer_on:
    alias: Storage timer on
    sequence:
    - service: timer.cancel
      entity_id: timer.timer_st
    - service: timer.start
      entity_id: timer.timer_st
  
  speedtest_manual:
    alias: Speedtest
    sequence:
      - service: speedtestdotnet.speedtest
  
  entrance_r_on:
    alias: Entrance Right ON
    sequence:
      - service: switch.turn_on
        entity_id: switch.wall_switch_right_158d000223921b
  
  entrance_r_off:
    alias: Entrance Right OFF
    sequence:
      - service: switch.turn_off
        entity_id: switch.wall_switch_right_158d000223921b
  
  fridge_l_on:
    alias: Fridge Left ON
    sequence:
      - service: switch.turn_on
        entity_id: switch.wall_switch_left_158d000253f04a
  
  fridge_l_off:
    alias: Fridge Left OFF
    sequence:
      - service: switch.turn_off
        entity_id: switch.wall_switch_left_158d000253f04a
  
  weather_message:
    alias: Weather forecast
    sequence:
      - service: notify.telegram
        data:
          title: 'Прогноз погоды'
          message: |
            Сегодня {{ states('sensor.dark_sky_summary') }}. 
            Температура {{ states('sensor.tts_temperature') }} градусов.
            Вероятность осадков - {{ states('sensor.tts_precip_prob') }} процентов
            Вид осадков - {{ states('sensor.tts_precip') }}
            
  lights_off:
    alias: Lights Off
    sequence:
      #- service: notify.telegram
      #  data_template:
      #    message: "\U0001f4a1 (скрипт)Выключаем освещение"
      - service: switch.turn_off
        entity_id: switch.wall_switch_right_158d0002a36f7f, switch.plug_158d000216528c, switch.wall_switch_left_158d0002a36f7f, switch.plug_158d0001f54f91, switch.wall_switch_right_158d0002a36e26, switch.plug_158d0001f54f90, switch.plug_158d0001f9ebd8, switch.plug_158d00020d8679, switch.wall_switch_left_158d0002a36433, switch.wall_switch_right_158d0002a36433, switch.wall_switch_left_158d0002a36e26, switch.plug_158d0001f5501f, switch.wall_switch_158d000248bf53, switch.wall_switch_right_158d000253f04a, switch.wall_switch_left_158d000223921b, switch.plug_158d000232481a
      - service: fan.turn_off 
        entity_id: fan.purifier2s, fan.humidifier2
      - service: light.turn_off
        entity_id: light.bedside_mb, light.round_led_mb, light.square_led_v, light.philips_e27_mb, light.philips_e27_sasha, light.led_color_v, light.led_color_k
      #- service: notify.telegram
      #  data_template:
      #    message: "\U0001f4a1 (скрипт)Освещение выключено"
          
  purge_db:
    alias: Purge Main DB
    sequence:
      - service: recorder.purge
        data:
              keep_days: 1
              repack: true
  
  manual_hassio_restart:
    alias: Hass.io Restart
    sequence:
      - alias: Restart
        service: homeassistant.restart
        
  manual_hassio_host_restart:
    alias: Host Restart
    sequence:
      - alias: Host Restart
        service: hassio.host_reboot
  
  power_t1:
    alias: Power Consumption T1
    sequence:
      - service: input_number.set_value
        data_template:
            entity_id: input_number.power_consumption_t1
            value: "{{ (states.input_number.power_consumption_t1.state|float + states.sensor.power_consumption.state|float / 120000) | round(2) }}"
      - service: input_number.set_value
        data_template:
            entity_id: input_number.power_t1
            value: "{{ (states.input_number.power_t1.state|float + states.sensor.power_consumption.state|float / 120000) | round(2) }}"
  
  power_t2:
    alias: Power Consumption T2
    sequence:
      - service: input_number.set_value
        data_template:
            entity_id: input_number.power_consumption_t2
            value: "{{ (states.input_number.power_consumption_t2.state|float + states.sensor.power_consumption.state|float / 120000) | round(2) }}"
      - service: input_number.set_value
        data_template:
            entity_id: input_number.power_t2
            value: "{{ (states.input_number.power_t2.state|float + states.sensor.power_consumption.state|float / 120000) | round(2) }}"
  
  power_m_t1:
    alias: Power Consumption T1/Month
    sequence:
      - service: input_number.set_value
        data_template:
            entity_id: input_number.power_consumption_month_t1
            value: "{{ (states.input_number.power_consumption_month_t1.state|float + states.sensor.power_consumption.state|float / 120000) | round(2) }}"
  
  power_m_t2:
    alias: Power Consumption T2/Month
    sequence:
      - service: input_number.set_value
        data_template:
            entity_id: input_number.power_consumption_month_t2
            value: "{{ (states.input_number.power_consumption_month_t2.state|float + states.sensor.power_consumption.state|float / 120000) | round(2) }}"
  
  
  system_water_date1_action:
    alias: Water Consumption Report
    sequence:
      - service: notify.telegram
        data_template: 
          message: >-
              Холодная вода:
              
              {{ ((states('sensor.cold_water_meter'))|float)}} м3
              
              Горячая вода:
              
              {{ ((states('sensor.hot_water_meter'))|float)}} м3
              
              
              Расход за месяц:
              
              Холодная вода:
              
              {{ (((states('sensor.cold_water_month'))|float)/100)|round(2) }} м3
              
              Горячая вода:
              
              {{ (((states('sensor.hot_water_month'))|float)/100)|round(2) }} м3
              
              Стоимость:
              
              {{ ((states('sensor.water_cost'))|float)}} руб.
      - delay:
          seconds: 1
      - service: counter.reset
        entity_id: 
          - counter.cold_water_meter_from_date1
          - counter.hot_water_meter_from_date1
      - service: input_number.set_value
        data_template:
          entity_id: input_number.hot_water_meter_month
          value: 0
      - service: input_number.set_value
        data_template:
          entity_id: input_number.cold_water_meter_month
          value: 0
      
  
  system_power_date1_action:
    alias: Power Consumption Report
    sequence:
      - service: notify.telegram
        data_template: 
          message: >-
              Электричество (день) Т1:
              
              {{ ((states('sensor.power_t1'))|float)}} кВт
              
              Электричество (ночь) Т2:
              
              {{ ((states('sensor.power_t2'))|float)}} кВт
              
              
              Расход за месяц:
              
              Электричество (день) Т1:
              
              {{ ((states('sensor.power_consumption_month_t1'))|float)}} кВт
              
              Электричество (ночь) Т2:
              
              {{ ((states('sensor.power_consumption_month_t2'))|float)}} кВт
              
              Стоимость:
              
              {{ ((states('sensor.power_consumption_month_cost'))|float) }} руб.
  
  
  kitchen_snapshot:
    alias: Snapshot - Kitchen
    sequence:
      - service: camera.snapshot
        data:
          entity_id: camera.uvc_g3_flex_kitchen
          filename: "/config/www/cam_captures/kitchen.jpg"
      - delay: 00:00:07
      - service: notify.telegram
        data:
          title: "Кухня!"
          message: "Фотография" 
          data:
            photo:
            - file: /config/www/cam_captures/kitchen.jpg
  
  entrance_snapshot:
    alias: Snapshot - Entrance
    sequence:
      - service: camera.snapshot
        data:
          entity_id: camera.uvc_g3_flex_entrance
          filename: "/config/www/cam_captures/entrance.jpg"
      - delay: 00:00:07
      - service: notify.telegram
        data:
          title: "Входная дверь!"
          message: "Фотография" 
          data:
            photo:
            - file: /config/www/cam_captures/entrance.jpg
  
  hall_snapshot:
    alias: Snapshot - Hall
    sequence:
      - service: camera.snapshot
        data:
          entity_id: camera.uvc_g3_flex_hall
          filename: "/config/www/cam_captures/hall.jpg"
      - delay: 00:00:07
      - service: notify.telegram
        data:
          title: "Большой коридор!"
          message: "Фотография" 
          data:
            photo:
            - file: /config/www/cam_captures/hall.jpg
  
  cycle_purifier_mode:
    alias: Cycle Purifier Mode
    sequence:
      service: fan.set_speed
      data_template:
        speed: >
         {% if (states.fan.purifier2s.attributes.mode|string) == "silent" %}
            favorite
          {% elif (states.fan.purifier2s.attributes.mode|string) == "favorite" %}
            auto
          {% elif (states.fan.purifier2s.attributes.mode|string) == "auto" %}
            silent
          {% endif %}
        entity_id: fan.purifier2s
              
              
  set_humidifier_buzzer:
    alias: Set On/Off Humidifier Buzzer
    sequence:
      data:
        entity_id: fan.humidifier2
      service_template: >
       {% if (states.fan.humidifier2.attributes.buzzer|string) == "True" %}
          fan.xiaomi_miio_set_buzzer_off
        {% else %}
          fan.xiaomi_miio_set_buzzer_on
        {% endif %}
   
  set_humidifier_dry_mode:
    alias: Set On/Off Humidifier Dry Mode
    sequence:
      data:
        entity_id: fan.humidifier2
      service_template: >
       {% if (states.fan.humidifier2.attributes.dry|string) == "True" %}
          fan.xiaomi_miio_set_dry_off
        {% else %}
          fan.xiaomi_miio_set_dry_on
        {% endif %}
   
  cycle_humidifier_mode:
    alias: Cycle Humidifier Mode
    sequence:
      service: fan.set_speed
      data_template:
        speed: >
         {% if (states.fan.humidifier2.attributes.mode|string) == "silent" %}
            medium
          {% elif (states.fan.humidifier2.attributes.mode|string) == "medium" %}
            high
          {% elif (states.fan.humidifier2.attributes.mode|string) == "high" %}
            auto
          {% else %}
            silent
          {% endif %}
        entity_id: fan.humidifier2
   
  cycle_humidifier_led:
    alias: Cycle Humidifier LED Brightness
    sequence:
      service: fan.xiaomi_miio_set_led_brightness
      data_template:
        brightness: >
         {% if states.fan.humidifier2.attributes.led_brightness  == 2 %}
            1
          {% elif states.fan.humidifier2.attributes.led_brightness == 1 %}
            0
          {% else %}
            2
          {% endif %}
        entity_id: fan.humidifier2
        
        
        #{% if is_state_attr('fan.humidifier2', 'led_brightness', 2) %}
         #   1
         # {% elif is_state_attr('fan.humidifier2', 'led_brightness', 1) %}
         #   0
         # {% else %}
         #   2
         # {% endif %}
  
  radio_off:
      alias: Stop Radio
      sequence:
        - service: media_player.media_stop
          data_template:
             entity_id: >
              {% if is_state("input_select.chromecast_radio", "Kitchen") %} media_player.home_mini_k
              {% elif is_state("input_select.chromecast_radio", "Vova's room") %} media_player.home_mini_v
              {% elif is_state("input_select.chromecast_radio", "Sasha's room") %} media_player.home_mini_s
              {% elif is_state("input_select.chromecast_radio", "Master Bedroom") %} media_player.home_mini_mb
              {% elif is_state("input_select.chromecast_radio", "Hall big") %} media_player.mpd
              {% elif is_state("input_select.chromecast_radio", "Everywhere") %} media_player.home_group
              {% endif %}
         
  radio_on:
      alias: Play Radio
      sequence:
        - service: media_player.volume_set
          data_template:
            entity_id: >
              {% if is_state("input_select.chromecast_radio", "Kitchen") %} media_player.home_mini_k
              {% elif is_state("input_select.chromecast_radio", "Vova's room") %} media_player.home_mini_v
              {% elif is_state("input_select.chromecast_radio", "Sasha's room") %} media_player.home_mini_s
              {% elif is_state("input_select.chromecast_radio", "Master Bedroom") %} media_player.home_mini_mb
              {% elif is_state("input_select.chromecast_radio", "Hall big") %} media_player.mpd
              {% elif is_state("input_select.chromecast_radio", "Everywhere") %} media_player.home_group
              {% endif %}
            volume_level: '{{  states.input_number.volume_radio.state  }}' 
        -  service: media_player.play_media
           data_template:
             entity_id: >
              {% if is_state("input_select.chromecast_radio", "Kitchen") %} media_player.home_mini_k
              {% elif is_state("input_select.chromecast_radio", "Vova's room") %} media_player.home_mini_v
              {% elif is_state("input_select.chromecast_radio", "Sasha's room") %} media_player.home_mini_s
              {% elif is_state("input_select.chromecast_radio", "Master Bedroom") %} media_player.home_mini_mb
              {% elif is_state("input_select.chromecast_radio", "Hall big") %} media_player.mpd
              {% elif is_state("input_select.chromecast_radio", "Everywhere") %} media_player.home_group
              {% endif %}
             media_content_id: >
              {% if is_state("input_select.radio_station", "Русское радио") %} https://rusradio.hostingradio.ru/rusradio128.mp3
              {% elif is_state("input_select.radio_station", "Шансон") %} http://chanson.hostingradio.ru:8041/chanson128.mp3
              {% elif is_state("input_select.radio_station", "Ретро FM") %} http://retroserver.streamr.ru:8043/retro256.mp3
              {% elif is_state("input_select.radio_station", "Детское радио") %} http://ic7.101.ru:8000/a199
              {% elif is_state("input_select.radio_station", "Детское радио 2") %} http://ic2.101.ru:8000/v14_1
              {% endif %}
             #media_content_type: 'audio/mp4' 
             media_content_type: 'music' 
  
  dismiss_all_persistent_notifications:
    alias: Remove all Persistent notifications
    sequence:
      - service_template: >
          {% if states.persistent_notification | count > 0 %}
            script.turn_on
          {% else %}
            script.turn_off
          {% endif %}
        data_template:
          entity_id: script.dismiss_all_persistent_notifications_loop
          message: >
            {% for item in states.persistent_notification %}
              {% if loop.first %}
                {{ item.name | lower | replace("persistent_notification.", "") }}
              {% endif %}
            {% endfor %}

  dismiss_all_persistent_notifications_loop:
    alias: Remove all Persistent notifications loop
    sequence:
      - service: persistent_notification.dismiss
        data:
          notification_id: "{{ message }}"
      - service: script.turn_on
        data:
          entity_id: script.dismiss_all_persistent_notifications
  
  update_sensors_stats:
    alias: Sensors Stats Update
    sequence:
      - service: homeassistant.update_entity
        entity_id: sensor.sensor_count, sensor.counter_count, sensor.automation_count, sensor.script_count, sensor.switch_count, sensor.binary_sensor_count, sensor.lights_count, sensor.tracker_count