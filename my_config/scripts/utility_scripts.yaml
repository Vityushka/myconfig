  utility_value_from_j3455:
    alias: Utility value from Main Server
    sequence:
      - service: input_number.set_value
        data_template:
              entity_id: input_number.power_t1
              value: "{{ states('sensor.power_t1_j3455')|float }}"
      - service: input_number.set_value
        data_template:
              entity_id: input_number.power_t2
              value: "{{ states('sensor.power_t2_j3455')|float }}"
      - service: input_number.set_value
        data_template:
              entity_id: input_number.power_consumption_month_t1
              value: "{{ states('sensor.power_consumption_month_t1_j3455')|float }}"
      - service: input_number.set_value
        data_template:
              entity_id: input_number.power_consumption_month_t2
              value: "{{ states('sensor.power_consumption_month_t2_j3455')|float }}"
      
      - service: input_number.set_value
        data_template:
              entity_id: input_number.cold_water_meter
              value: "{{ states('sensor.cold_water_meter_j3455')|float}}"
      - service: input_number.set_value
        data_template:
              entity_id: input_number.hot_water_meter
              value: "{{ states('sensor.hot_water_meter_j3455')|float}}"
      
      - service: input_number.set_value
        data_template:
              entity_id: input_number.cold_water_meter_month
              value: "{{ states('sensor.cold_water_meter_month_j3455')|float *100 }}"
      - service: input_number.set_value
        data_template:
              entity_id: input_number.hot_water_meter_month
              value: "{{ states('sensor.hot_water_meter_month_j3455')|float * 100 }}"

  utility_value_from_rpi:
    alias: Utility value from RPI Server
    sequence:
      - service: input_number.set_value
        data_template:
              entity_id: input_number.power_t1
              value: "{{ states('sensor.power_t1_rpi')|float }}"
      - service: input_number.set_value
        data_template:
              entity_id: input_number.power_t2
              value: "{{ states('sensor.power_t2_rpi')|float }}"
      - service: input_number.set_value
        data_template:
              entity_id: input_number.power_consumption_month_t1
              value: "{{ states('sensor.power_consumption_month_t1_rpi')|float }}"
      - service: input_number.set_value
        data_template:
              entity_id: input_number.power_consumption_month_t2
              value: "{{ states('sensor.power_consumption_month_t2_rpi')|float }}"
      
      - service: input_number.set_value
        data_template:
              entity_id: input_number.cold_water_meter
              value: "{{ states('sensor.cold_water_meter_rpi')|float}}"
      - service: input_number.set_value
        data_template:
              entity_id: input_number.hot_water_meter
              value: "{{ states('sensor.hot_water_meter_rpi')|float}}"
      
      - service: input_number.set_value
        data_template:
              entity_id: input_number.cold_water_meter_month
              value: "{{ states('sensor.cold_water_meter_month_rpi')|int }}"
      - service: input_number.set_value
        data_template:
              entity_id: input_number.hot_water_meter_month
              value: "{{ states('sensor.hot_water_meter_month_rpi')|int }}"

  ro_reset:
    alias: RO reset
    sequence:
      - service: input_number.set_value
        data_template:
            entity_id: input_number.ro_mineralized, input_number.ro_nonmineralized
            value: 0

  power_t1:
    alias: Power Consumption T1
    sequence:
      - service: input_number.set_value
        data_template:
            entity_id: input_number.power_t1
            value: "{{ (states('input_number.power_t1')|float + states('sensor.esp32_domofon_power_meter')|float / 120000) | round(2) }}"
            #value: "{{ (states('input_number.power_t1')|float + states('sensor.power_consumption')|float / 120000) | round(2) }}"            

  power_t2:
    alias: Power Consumption T2
    sequence:
      - service: input_number.set_value
        data_template:
            entity_id: input_number.power_t2
            value: "{{ (states('input_number.power_t2')|float + states('sensor.esp32_domofon_power_meter')|float / 120000) | round(2) }}"
            #value: "{{ (states('input_number.power_t2')|float + states('sensor.power_consumption')|float / 120000) | round(2) }}"
  
  power_m_t1:
    alias: Power Consumption T1/Month
    sequence:
      - service: input_number.set_value
        data_template:
            entity_id: input_number.power_consumption_month_t1
            value: "{{ (states('input_number.power_consumption_month_t1')|float + states('sensor.esp32_domofon_power_meter')|float / 120000) | round(2) }}"
            #value: "{{ (states('input_number.power_consumption_month_t1')|float + states('sensor.power_consumption')|float / 120000) | round(2) }}"
  
  power_m_t2:
    alias: Power Consumption T2/Month
    sequence:
      - service: input_number.set_value
        data_template:
            entity_id: input_number.power_consumption_month_t2
            value: "{{ (states('input_number.power_consumption_month_t2')|float + states('sensor.esp32_domofon_power_meter')|float / 120000) | round(2) }}"
            #value: "{{ (states('input_number.power_consumption_month_t2')|float + states('sensor.power_consumption')|float / 120000) | round(2) }}"
  
  
  system_water_new_month_action:
    alias: Water Consumption Report
    sequence:
      - service: notify.telegram
        data_template: 
          message: >-
              {{ "\U0001f4a6" }}
              Холодная вода: {{ ((states('sensor.cold_water_meter'))|float)}} м3
              Горячая вода: {{ ((states('sensor.hot_water_meter'))|float)}} м3
              
              
              Расход за месяц:
              Холодная вода: {{ (((states('sensor.cold_water_month'))|float))|round(2) }} м3
              Горячая вода: {{ (((states('sensor.hot_water_month'))|float))|round(2) }} м3
              Стоимость: {{ ((states('sensor.water_cost'))|float)}} руб.
      - delay:
          seconds: 1

      - service: mqtt.publish
        data_template:
          topic: "utility/main/{{now().year}}/{{now().month}}/hot_water_meter"
          payload: "{{states('sensor.hot_water_meter')|float}}"
          retain: true
      - service: mqtt.publish
        data_template:
          topic: "utility/main/{{now().year}}/{{now().month}}/cold_water_meter"
          payload: "{{states('sensor.cold_water_meter')|float}}"
          retain: true

      - service: input_number.set_value
        data_template:
          entity_id: input_number.hot_water_meter_last_month
          value: "{{ states('input_number.hot_water_meter')|float }}"
      - service: input_number.set_value
        data_template:
          entity_id: input_number.cold_water_meter_last_month
          value: "{{ states('input_number.cold_water_meter')|float }}"
      - service: input_number.set_value
        data_template:
          entity_id: input_number.hot_water_meter_month, input_number.cold_water_meter_month
          value: 0

  
  system_power_new_month_action:
    alias: Power Consumption Report
    sequence:
      - service: notify.telegram
        data_template: 
          message: >-
              {{ "\U0001f50c" }}
              Электричество (день) Т1: {{ ((states('sensor.power_t1'))|float)}} кВт*ч
              Электричество (ночь) Т2: {{ ((states('sensor.power_t2'))|float)}} кВт*ч
            
              
              Расход за месяц:
              Электричество (день) Т1: {{ ((states('sensor.power_consumption_month_t1'))|float)}} кВт*ч
              Электричество (ночь) Т2: {{ ((states('sensor.power_consumption_month_t2'))|float)}} кВт*ч
              Стоимость: {{ ((states('sensor.power_consumption_month_cost'))|float) }} руб.
      
      - service: mqtt.publish
        data_template:
          topic: "utility/main/{{now().year}}/{{now().month}}/power_meter_t1"
          payload: "{{states('sensor.power_t1')|float}}"
          retain: true
      - service: mqtt.publish
        data_template:
          topic: "utility/main/{{now().year}}/{{now().month}}/power_meter_t2"
          payload: "{{states('sensor.power_t2')|float}}"
          retain: true
      
      - service: input_number.set_value
        data_template:
          entity_id: input_number.power_meter_last_month_t1
          value: "{{ (states('input_number.power_t1')) | float}}"
      - service: input_number.set_value
        data_template:
          entity_id: input_number.power_meter_last_month_t2
          value: "{{ (states('input_number.power_t2')) | float}}"

      - service: input_number.set_value
        data_template:
          entity_id: input_number.power_consumption_month_t1, input_number.power_consumption_month_t2
          value: 0
          
  ro_reset_stats:
    alias: RO Reset Statistics
    sequence:
      - service: utility_meter.reset
        entity_id:
          - utility_meter.water_mineralized
          - utility_meter.water_mineralized_daily
          - utility_meter.water_mineralized_monthly
          - utility_meter.water_non_mineralized
          - utility_meter.water_non_mineralized_daily
          - utility_meter.water_non_mineralized_monthly
          - utility_meter.water_postmembrane
          - utility_meter.water_postmembrane_daily
          - utility_meter.water_postmembrane_monthly
          - utility_meter.water_raw
          - utility_meter.water_raw_daily
          - utility_meter.water_raw_monthly